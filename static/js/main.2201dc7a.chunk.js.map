{"version":3,"sources":["peer/PeerConnector.tsx","peer/index.ts","graph/useGraph.ts","graph/models/factories.ts","note/Note.ts","note/NoteEditor.tsx","graph/models/Node.ts","graph/models/Graph.ts","graph/views/EdgeList.tsx","graph/views/LabelEditor.tsx","select/SelectButton.tsx","graph/views/NodeActions.tsx","graph/views/NodeLayout.tsx","graph/views/NodeListItem.tsx","graph/views/NodeViewer.tsx","route.tsx","theme.tsx","serviceWorker.ts","index.tsx","common/Layout.tsx","common/Unknown.ts","common/TitleBar.tsx","common/utils.tsx","store/persist.ts","store/StoreProvider.tsx","store/views/PropertyEditor.tsx","store/Store.ts","store/useStore.ts","config/Config.ts","config/Settings.tsx"],"names":["PeerConnector","id","React","useState","peerError","setPeerError","hasAccepted","setHasAccepted","navigate","useNavigate","useGraph","graph","align","mt","textAlign","color","disabled","onClick","seekPeerConnection","then","instance","makeUrl","catch","error","size","selector","useStore","store","edgeMapFactory","getEdgeType","types","model","edgeMap","map","array","safeReference","late","acceptsUndefined","actions","self","hasEdge","tag","target","Boolean","get","includes","length","addEdge","has","set","push","removeEdge","remove","views","getEdgeTag","nodeFactory","models","compose","identifier","concat","named","graphFactory","nodeModels","options","Object","fromEntries","keys","key","isModelType","isIdentifierType","properties","Error","createNode","modelName","props","node","create","getId","uuid","put","NodeBase","Node","NoteBody","content","maybe","string","mimeType","Note","label","body","setLabel","value","setBody","setMimeType","makeStyles","theme","createStyles","root","input","height","padding","spacing","toolbar","Config","BaseConfig","BaseNote","union","optional","events","date","Graph","setActiveMode","mode","activeModes","unsetActiveMode","toggleActiveMode","clearSelectedNodes","toggleSelectNode","selectedNodes","nodeIds","cursorNode","delete","clear","deleteSelectedNodes","forEach","nodeId","moveSelectedNodes","accessorId","accessor","copySelectedNodes","linkSelectedNodes","values","unlinkSelectedNodes","removeSelectedNodes","deleteNode","setCursorNode","afterCreate","persist","rootNode","cursorNodeId","applySnapshot","system","items","rootNodeId","user","global","lists","createChild","edgeProps","edgeType","child","config","useStyles","list","EdgeList","edgeTag","classes","className","List","aria-label","slice","reverse","item","width","fontSize","inputBase","LabelEditor","placeholder","createMode","onValue","inputRef","useRef","inputValue","setInputValue","useEffect","current","setSelectionRange","handleValue","event","handleFormEvent","preventDefault","onSubmit","onBlur","join","InputBase","autoFocus","multiline","fullWidth","onKeyDown","keyCode","shiftKey","onChange","inputProps","defaultProps","display","buttonGroup","borderRight","minWidth","selectButton","paddingRight","dropButton","deleteButton","palette","main","popper","marginRight","SelectButton","open","setOpen","anchorRef","ButtonGroup","variant","ref","Button","startIcon","aria-controls","undefined","aria-expanded","aria-haspopup","Popper","anchorEl","role","disablePortal","placement","ClickAwayListener","onClickAway","Paper","MenuList","MenuItem","divider","justifyContent","button","text","primary","toggledButton","labelEditor","NodeActions","setMode","hasChildren","childCount","selectedCount","Toolbar","isRootPath","closePeerConnection","offerPeerConnection","ctrlKey","secondary","backgroundColor","background","default","children","marginTop","NodeLayout","Box","AppBar","elevation","position","title","listItem","marginBottom","cursor","fade","breakpoints","up","borderRadius","shape","itemText","margin","overflowX","whiteSpace","textOverflow","paddingLeft","listItemSelectCheckbox","listItemIcon","editItemText","typography","body1","secondaryActions","right","childButton","NodeListItem","expandSecondaryTypography","isEditing","setIsEditing","isSelected","newlinePosition","indexOf","ListItem","disableRipple","component","e","metaKey","ListItemText","ListItemSecondaryAction","to","Link","endIcon","NodeViewer","lookup","path","process","Route","Component","Router","basepath","Settings","ThemeProvider","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","fontFamily","type","MuiButton","disableElevation","MuiButtonGroup","overrides","MuiCssBaseline","html","userSelect","overscrollBehavior","maxWidth","CssBaseline","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","appBar","Layout","Unknown","null","boolean","number","backButton","visibility","pointerEvents","hide","mouseEvents","settingsButton","flexGrow","TitleBar","showBackButton","showSettingsButton","IconButton","edge","history","back","Typography","pathname","a","db","Dexie","tableNames","getMembers","tableConfig","name","version","stores","Promise","all","table","toArray","rows","r","resolved","onPatch","patch","split","typeName","propName","op","getSnapshot","propValue","isStateTreeNode","update","setLocation","storeContext","createContext","StoreProvider","createElement","Provider","useContext","useObserver","t","subheader","ListSubheader","ListItemIcon","Switch","checked","listCheckboxSetting","toggleListCheckboxSetting"],"mappings":"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","file":"static/js/main.2201dc7a.chunk.js","sourcesContent":["/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Box, Button, Typography, CircularProgress } from '@material-ui/core'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { useNavigate } from '@reach/router'\n\nimport { Layout } from 'common'\nimport { makeUrl } from 'route'\nimport { useGraph } from 'graph'\n\ninterface PeerConnectorProps {\n  id?: string\n}\n\nexport const PeerConnector: React.FunctionComponent<PeerConnectorProps> = ({\n  id,\n}) => {\n  const [peerError, setPeerError] = React.useState<null | Error>(null)\n  const [hasAccepted, setHasAccepted] = React.useState(false)\n  const navigate = useNavigate()\n\n  return useGraph(graph => {\n    const handleAccept: React.EventHandler<React.SyntheticEvent> = () => {\n      setHasAccepted(true)\n      graph\n        .seekPeerConnection(id)\n        .then((instance: IAnyStateTreeNode) => {\n          navigate(makeUrl(`/node/${instance.id}`))\n        })\n        .catch((error: Error) => {\n          setPeerError(error)\n        })\n    }\n\n    return (\n      <Layout>\n        <Typography align=\"center\">\n          Someone wants to share content with you.\n          <br />\n          Do not accept if you do not trust them.\n        </Typography>\n        <Box mt={1} textAlign=\"center\">\n          {peerError ? (\n            <Typography color=\"error\">{peerError}</Typography>\n          ) : (\n            <Button\n              disabled={hasAccepted}\n              onClick={handleAccept}\n              color=\"primary\"\n            >\n              {hasAccepted ? <CircularProgress size={24} /> : 'Accept'}\n            </Button>\n          )}\n        </Box>\n      </Layout>\n    )\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport * from './PeerConnector'\nexport * from './PeerManager'\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { Instance } from 'mobx-state-tree'\n\nimport { useStore } from 'store'\n\nimport { Graph } from './models/Graph'\n\nexport const useGraph = <S>(selector: (s: Instance<typeof Graph>) => S): S =>\n  useStore(store => selector(store.graph))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  IAnyModelType,\n  IAnyType,\n  Instance,\n  isIdentifierType,\n  SnapshotIn,\n  isModelType,\n  types,\n} from 'mobx-state-tree'\nimport { v4 as uuid } from 'uuid'\n\nexport type ModelOrUnion = IAnyModelType | IAnyType\nexport type EdgeResolver = () => ModelOrUnion\nexport type ModelTable = Record<string, IAnyModelType>\n\nexport const edgeMapFactory = (getEdgeType: EdgeResolver): IAnyModelType =>\n  types\n    .model('EdgeMap', {\n      edgeMap: types.map(\n        types.array(\n          types.safeReference(types.late(getEdgeType), {\n            acceptsUndefined: false,\n          }),\n        ),\n      ),\n    })\n    .actions(self => ({\n      hasEdge(tag: string, target?: Instance<IAnyModelType>): boolean {\n        if (target) {\n          return Boolean(self.edgeMap.get(tag)?.includes(target))\n        } else {\n          return Boolean(self.edgeMap.get(tag)?.length)\n        }\n      },\n    }))\n    .actions(self => ({\n      addEdge(tag: string, target: Instance<IAnyModelType>): void {\n        if (!self.edgeMap.has(tag)) {\n          self.edgeMap.set(tag, [])\n        }\n\n        self.edgeMap.get(tag)?.push(target)\n      },\n\n      removeEdge(tag: string, target: Instance<IAnyModelType>): void {\n        self.edgeMap.get(tag)?.remove(target)\n      },\n    }))\n    .views(self => ({\n      getEdgeTag(tag: string): void | Array<Instance<IAnyModelType>> {\n        return self.edgeMap.get(tag)\n      },\n    }))\n\nexport const nodeFactory = (\n  models: IAnyModelType | Array<IAnyModelType> = [],\n): IAnyModelType =>\n  types\n    .compose(\n      // @ts-ignore\n      ...[\n        types.model({\n          id: types.identifier,\n        }),\n      ].concat(models),\n    )\n    .named('Node')\n\ninterface GraphFactoryOptions {\n  getId?: () => string\n}\n\nexport const graphFactory = (\n  nodeModels: ModelTable,\n  options: GraphFactoryOptions = {},\n): IAnyModelType =>\n  types\n    .model(\n      'Graph',\n      Object.fromEntries(\n        Object.keys(nodeModels).map(key => {\n          const model = nodeModels[key]\n\n          if (isModelType(model) && isIdentifierType(model.properties.id)) {\n            return [key, types.map(nodeModels[key])]\n          }\n\n          // Can't add an identifier because the model may be referenced\n          throw Error(`Model '${key}' requires 'id' identifier`)\n        }),\n      ),\n    )\n    .actions(self => ({\n      createNode(\n        modelName = 'Node',\n        props: SnapshotIn<IAnyModelType> = {},\n      ): Instance<IAnyModelType> {\n        if (!nodeModels[modelName]) {\n          throw Error(`No model named '${modelName}'`)\n        }\n\n        const node = nodeModels[modelName].create({\n          id: options.getId?.() ?? uuid(),\n          ...props,\n        })\n\n        self[modelName].put(node)\n\n        return node\n      },\n    }))\n\nexport const NodeBase = nodeFactory(edgeMapFactory(() => NodeBase))\nexport const GraphBase = graphFactory({ Node: NodeBase })\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types } from 'mobx-state-tree'\n\nexport const NoteBody = types.model('NoteBody', {\n  content: types.maybe(types.string),\n  mimeType: types.string,\n})\n\nexport const Note = types\n  .model('Note', {\n    label: types.string,\n    body: NoteBody,\n  })\n  .actions(self => ({\n    setLabel(value: string) {\n      self.label = value\n    },\n\n    setBody(value: string) {\n      self.body.content = value\n    },\n\n    setMimeType(value: string) {\n      self.body.mimeType = value\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport {\n  Box,\n  Button,\n  IconButton,\n  Toolbar,\n  Theme,\n  makeStyles,\n  createStyles,\n} from '@material-ui/core'\nimport Code from '@material-ui/icons/Code'\nimport FormatQuote from '@material-ui/icons/FormatQuote'\nimport FormatBold from '@material-ui/icons/FormatBold'\nimport FormatItalic from '@material-ui/icons/FormatItalic'\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined'\nimport SpaceBar from '@material-ui/icons/SpaceBar'\nimport FormatListNumbered from '@material-ui/icons/FormatListNumbered'\nimport FormatListBulleted from '@material-ui/icons/FormatListBulleted'\nimport * as Draft from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nimport { Note } from './Note'\n\ninterface ButtonConfig {\n  label: string\n  style: string\n  icon?: React.ReactElement\n}\n\nconst BLOCK_TYPES: Array<ButtonConfig> = [\n  /* { label: 'H1', style: 'header-one' }, */\n  /* { label: 'H2', style: 'header-two' }, */\n  /* { label: 'H3', style: 'header-three' }, */\n  /* { label: 'H4', style: 'header-four' }, */\n  /* { label: 'H5', style: 'header-five' }, */\n  /* { label: 'H6', style: 'header-six' }, */\n  { label: 'UL', style: 'unordered-list-item', icon: <FormatListNumbered /> },\n  { label: 'OL', style: 'ordered-list-item', icon: <FormatListBulleted /> },\n  { label: 'Blockquote', style: 'blockquote', icon: <FormatQuote /> },\n  { label: 'Code Block', style: 'code-block', icon: <Code /> },\n]\n\nconst INLINE_STYLES: Array<ButtonConfig> = [\n  { label: 'Bold', style: 'BOLD', icon: <FormatBold /> },\n  { label: 'Italic', style: 'ITALIC', icon: <FormatItalic /> },\n  { label: 'Underline', style: 'UNDERLINE', icon: <FormatUnderlined /> },\n  { label: 'Monospace', style: 'CODE', icon: <SpaceBar /> },\n]\n\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n}\n\nfunction getBlockStyle(block: Draft.ContentBlock): string {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    default:\n      return ''\n  }\n}\n\ninterface StyleButtonProps {\n  onToggle: (inlineStyle: string) => void\n  style: string\n  active: boolean\n  label: string\n  icon?: React.ReactElement\n}\n\nconst StyleButton: React.FunctionComponent<StyleButtonProps> = ({\n  onToggle,\n  style,\n  active,\n  label,\n  icon,\n}) => {\n  const onToggleWrap: React.EventHandler<React.SyntheticEvent> = e => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  let className = 'RichEditor-styleButton'\n  if (active) {\n    className += ' RichEditor-activeButton'\n  }\n\n  return icon ? (\n    <IconButton size=\"small\" onMouseDown={onToggleWrap} className={className}>\n      {icon}\n    </IconButton>\n  ) : (\n    <Button\n      size=\"small\"\n      startIcon={icon ? icon : undefined}\n      onMouseDown={onToggleWrap}\n      className={className}\n    >\n      {icon ? '' : label}\n    </Button>\n  )\n}\n\ninterface BlockStyleControlsProps {\n  editorState: Draft.EditorState\n  onToggle: (style: string) => void\n}\n\nconst BlockStyleControls: React.FunctionComponent<BlockStyleControlsProps> = ({\n  editorState,\n  onToggle,\n}) => {\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          icon={type.icon}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\n\ninterface InlineStyleControlsProps {\n  editorState: Draft.EditorState\n  onToggle: (style: string) => void\n}\n\nconst InlineStyleControls: React.FunctionComponent<InlineStyleControlsProps> = ({\n  editorState,\n  onToggle,\n}) => {\n  const currentStyle = editorState.getCurrentInlineStyle()\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map(type => (\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          icon={type.icon}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    input: {\n      height: '300px',\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    toolbar: {\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n  }),\n)\n\ninterface NoteEditorProps {\n  note?: Instance<typeof Note>\n  className?: string\n}\n\nexport const NoteEditor: React.FunctionComponent<NoteEditorProps> = ({\n  note,\n  className,\n}) => {\n  const classes = useStyles()\n  const editorRef = React.useRef(null)\n  const [editorState, setEditorState] = React.useState(\n    Draft.EditorState.createWithContent(Draft.ContentState.createFromText('')),\n  )\n\n  function handleKeyCommand(\n    command: Draft.DraftEditorCommand,\n    editorState: Draft.EditorState,\n  ): Draft.DraftHandleValue {\n    const newState = Draft.RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      setEditorState(newState)\n      return 'handled'\n    } else {\n      return 'not-handled'\n    }\n  }\n\n  const mapKeyToEditorCommand = (\n    e: React.KeyboardEvent,\n  ): Draft.DraftEditorCommand | null => {\n    if (e.keyCode === 9) {\n      e.preventDefault()\n\n      const newEditorState = Draft.RichUtils.onTab(e, editorState, 4)\n\n      if (newEditorState !== editorState) {\n        setEditorState(newEditorState)\n      }\n\n      return null\n    } else {\n      return Draft.getDefaultKeyBinding(e)\n    }\n  }\n\n  function toggleBlockType(blockType: string): void {\n    setEditorState(Draft.RichUtils.toggleBlockType(editorState, blockType))\n  }\n\n  function toggleInlineStyle(inlineStyle: string): void {\n    setEditorState(Draft.RichUtils.toggleInlineStyle(editorState, inlineStyle))\n  }\n\n  return (\n    <div className={classes.root}>\n      <Toolbar variant=\"dense\" className={classes.toolbar}>\n        <Box flexGrow={1}>\n          <InlineStyleControls\n            editorState={editorState}\n            onToggle={toggleInlineStyle}\n          />\n        </Box>\n        <BlockStyleControls\n          editorState={editorState}\n          onToggle={toggleBlockType}\n        />\n      </Toolbar>\n      <div className={classes.input}>\n        <Draft.Editor\n          ref={editorRef}\n          blockStyleFn={getBlockStyle}\n          customStyleMap={styleMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={setEditorState}\n          placeholder=\"Write here\"\n          spellCheck={true}\n        />\n      </div>\n    </div>\n  )\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types, IAnyType } from 'mobx-state-tree'\n\nimport { Config as BaseConfig } from 'config'\nimport { Note as BaseNote } from 'note'\n\nimport { nodeFactory, edgeMapFactory } from 'graph'\n\nexport const Config = nodeFactory(BaseConfig)\nexport const Note = nodeFactory(BaseNote)\n\nexport const Node = nodeFactory([\n  edgeMapFactory(() =>\n    types.union(\n      types.late((): IAnyType => Node),\n      Config,\n      Note,\n    ),\n  ),\n])\n  .props({\n    label: types.optional(types.string, ''),\n  })\n\n  .actions(self => ({\n    setLabel(label: string) {\n      self.label = label\n    },\n  }))\n\n  .views(self => ({\n    get childCount(): number {\n      return self.edgeMap.get('child')?.length ?? 0\n    },\n\n    get createDate(): Date {\n      return self.events[0]?.date\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  Instance,\n  applySnapshot,\n  getSnapshot,\n  SnapshotIn,\n  IAnyModelType,\n} from 'mobx-state-tree'\n\nimport { persist } from 'store/persist'\n\nimport { graphFactory } from './factories'\nimport { Node, Config, Note } from './Node'\n\nexport const Graph = graphFactory({ Node, Config, Note })\n  .actions(self => ({\n    setActiveMode(mode: string) {\n      const activeModes = self.Config.get('system').get('activeModes')\n      if (activeModes && !activeModes?.includes(mode)) {\n        activeModes.push(mode)\n      }\n    },\n\n    unsetActiveMode(mode: string) {\n      const activeModes = self.Config.get('system').get('activeModes')\n      if (activeModes?.includes(mode)) {\n        activeModes.remove(mode)\n      }\n    },\n\n    toggleActiveMode(mode: string) {\n      const activeModes = self.Config.get('system').get('activeModes')\n\n      if (!activeModes) {\n        return\n      }\n\n      // TODO mode logic doesn't belong here\n      if (activeModes.includes(mode)) {\n        activeModes.remove(mode)\n\n        if (mode === 'select') {\n          self.clearSelectedNodes()\n        }\n      } else {\n        activeModes.push(mode)\n\n        if (mode === 'select') {\n          activeModes.remove('edit')\n        }\n\n        if (mode === 'edit') {\n          activeModes.remove('select')\n        }\n      }\n    },\n  }))\n\n  .actions(self => ({\n    toggleSelectNode(node: Instance<typeof Node>) {\n      const selectedNodes = self.Config.get('system').get('selectedNodes')\n      if (!selectedNodes) {\n        return\n      }\n\n      const nodeIds = selectedNodes.get(self.cursorNode.id)\n\n      if (nodeIds) {\n        if (nodeIds.includes(node.id)) {\n          nodeIds.remove(node.id)\n          if (nodeIds.length === 0) {\n            selectedNodes.delete(self.cursorNode.id)\n          }\n        } else {\n          nodeIds.push(node.id)\n        }\n      } else {\n        selectedNodes.set(self.cursorNode.id, [node.id])\n      }\n\n      if (selectedNodes.size === 0) {\n        self.unsetActiveMode('select')\n      }\n    },\n\n    clearSelectedNodes() {\n      self.Config.get('system').get('selectedNodes')?.clear()\n      if (self.selectedNodes.size === 0) {\n        self.unsetActiveMode('select')\n      }\n    },\n\n    deleteSelectedNodes() {\n      // check if there are other\n      self.selectedNodes.forEach((nodeIds: Array<string>) =>\n        nodeIds.forEach((nodeId: string) => self.Node.delete(nodeId)),\n      )\n\n      self.clearSelectedNodes()\n    },\n\n    moveSelectedNodes() {\n      for (const [accessorId, nodeIds] of self.selectedNodes) {\n        const accessor = self.Node.get(accessorId)\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.removeEdge('parent', accessor)\n            accessor.removeEdge('child', nodeId)\n\n            node.addEdge('parent', self.cursorNode)\n            self.cursorNode.addEdge('child', node)\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    copySelectedNodes() {\n      //\n    },\n\n    linkSelectedNodes() {\n      for (const nodeIds of self.selectedNodes.values()) {\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.addEdge('parent', self.cursorNode)\n            self.cursorNode.addEdge('child', node)\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    unlinkSelectedNodes() {\n      for (const [accessorId, nodeIds] of self.selectedNodes) {\n        const accessor = self.Node.get(accessorId)\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.removeEdge('parent', accessor)\n            accessor.removeEdge('child', node)\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    removeSelectedNodes() {\n      for (const [accessorId, nodeIds] of self.selectedNodes) {\n        const accessor = self.Node.get(accessorId)\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.removeEdge('parent', accessor)\n            accessor.removeEdge('child', node)\n            if (node.edgeMap.get('parent').size === 0) {\n              self.deleteNode(node)\n            }\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    setCursorNode(node: Instance<typeof Node>) {\n      self.Config.get('system')?.set('cursorNodeId', node.id)\n    },\n  }))\n\n  .actions(self => ({\n    afterCreate() {\n      persist(self).then(() => {\n        let rootNode = self.rootNode\n        if (!rootNode) {\n          rootNode = self.createNode('Node', { label: 'Exuo' })\n        }\n\n        const cursorNodeId =\n          self.Config.get('system')?.get('cursorNodeId') ?? ''\n\n        applySnapshot(self.Config, {\n          system: {\n            id: 'system',\n            items: {\n              cursorNodeId,\n              rootNodeId: rootNode.id,\n              activeModes: [],\n              selectedNodes: {},\n            },\n          },\n\n          user: {\n            id: 'user',\n            items: {\n              global: {},\n              lists: {},\n            },\n          },\n        })\n      })\n    },\n\n    createChild<T extends IAnyModelType>(\n      node: Instance<typeof Node>,\n      edgeProps: SnapshotIn<T>,\n      edgeType = 'Node',\n    ): Instance<typeof Node> {\n      const child = self.createNode(edgeType, edgeProps)\n\n      node.addEdge('child', child)\n      child.addEdge('parent', node)\n\n      return child\n    },\n\n    deleteNode(node: Instance<typeof Node>) {\n      self.Node.delete(node.id)\n    },\n  }))\n\n  .views(self => ({\n    get rootNode() {\n      const config = self.Config.get('system')\n      return config && self.Node.get(config.get('rootNodeId'))\n    },\n\n    get cursorNode() {\n      const config = self.Config.get('system')\n      return config && self.Node.get(config.get('cursorNodeId'))\n    },\n\n    get activeModes() {\n      const config = self.Config.get('system')\n      return config?.get('activeModes')\n    },\n\n    get selectedNodes() {\n      return self.Config.get('system')?.get('selectedNodes')\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { List } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { IAnyModelType, Instance } from 'mobx-state-tree'\n\nimport { Node, useGraph, NodeListItem } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {},\n  }),\n)\n\ninterface EdgeListProps {\n  node: Instance<IAnyModelType>\n  edgeTag: string\n  className?: string\n}\n\nexport const EdgeList: React.FunctionComponent<EdgeListProps> = ({\n  node,\n  edgeTag,\n  className,\n}) => {\n  const classes = useStyles()\n  return useGraph(graph => (\n    <List aria-label=\"edge list\" className={classes.list}>\n      {node.edgeMap\n        .get(edgeTag)\n        ?.slice()\n        .reverse()\n        .map((item: Instance<typeof Node>) => (\n          <NodeListItem node={item} key={`${edgeTag}-${item.id}`} />\n        ))}\n    </List>\n  ))\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { InputBase } from '@material-ui/core'\nimport 'draft-js/dist/Draft.css'\n\nimport { useGraph } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      fontSize: 0,\n      padding: 0,\n    },\n\n    inputBase: {\n      padding: 0,\n      '& input, & textarea': {\n        // Extra pixel to account for body1 being 18px tall and\n        // this typography being 19px tall for some reason.\n        // I assume it has something to do with a calculated lineHeight.\n        // TODO This causes FF to be off by a pixel, so I'll have to figure\n        // out a real solution.\n        padding: '3px 0 2px 0',\n      },\n    },\n  }),\n)\n\ninterface LabelEditorProps {\n  label?: string\n  createMode?: boolean\n  placeholder?: string\n  className?: string\n  onValue?: (\n    value: string,\n    event?: React.KeyboardEvent<HTMLInputElement>,\n  ) => void | null | string\n}\n\nexport const LabelEditor: React.FunctionComponent<LabelEditorProps> = ({\n  label,\n  createMode,\n  placeholder,\n  className,\n  onValue,\n}) => {\n  const inputRef = React.useRef<HTMLInputElement>()\n  const classes = useStyles()\n  const [inputValue, setInputValue] = React.useState(label ?? '')\n\n  React.useEffect(() => {\n    inputRef.current?.setSelectionRange(inputValue.length, inputValue.length)\n  })\n\n  return useGraph(graph => {\n    const handleValue = (\n      event?: React.KeyboardEvent<HTMLInputElement>,\n    ): void => {\n      if (onValue) {\n        setInputValue(onValue?.(inputValue, event) || '')\n      }\n    }\n\n    const handleFormEvent = (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      handleValue()\n    }\n\n    const handleKeyDown = (\n      event: React.KeyboardEvent<HTMLInputElement>,\n    ): void => {\n      if (event.keyCode === 13 && !event.shiftKey) {\n        event.preventDefault()\n        handleValue(event)\n      }\n    }\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n      setInputValue(event.target.value)\n    }\n\n    return (\n      <form\n        onSubmit={handleFormEvent}\n        onBlur={handleFormEvent}\n        className={[classes.root, className].join(' ')}\n      >\n        <InputBase\n          inputRef={inputRef}\n          autoFocus\n          multiline\n          fullWidth\n          placeholder={placeholder}\n          value={inputValue}\n          onKeyDown={handleKeyDown}\n          onChange={handleChange}\n          inputProps={{ 'aria-label': 'label' }}\n          className={classes.inputBase}\n        />\n      </form>\n    )\n  })\n}\n\nLabelEditor.defaultProps = {\n  createMode: false,\n  placeholder: 'Label',\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport {\n  Button,\n  ButtonGroup,\n  ClickAwayListener,\n  Paper,\n  Popper,\n  MenuItem,\n  MenuList,\n} from '@material-ui/core'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDownOutlined'\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined'\nimport FlipToBackIcon from '@material-ui/icons/FlipToBackOutlined'\nimport FolderIcon from '@material-ui/icons/FolderOutlined'\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined'\nimport CropFreeIcon from '@material-ui/icons/CropFreeOutlined'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { useGraph, Node } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'inherit',\n    },\n    buttonGroup: {\n      color: 'inherit',\n      '& .MuiButtonGroup-groupedTextHorizontal': {\n        borderRight: 'unset',\n      },\n      '& .MuiButtonGroup-grouped': {\n        minWidth: 'unset',\n      },\n    },\n    selectButton: {\n      color: 'inherit',\n      paddingRight: theme.spacing(1) / 2,\n    },\n    dropButton: {\n      color: 'inherit',\n      padding: 0,\n    },\n    deleteButton: {\n      color: theme.palette.error.main,\n    },\n    popper: {\n      '& svg': {\n        marginRight: theme.spacing(1),\n      },\n    },\n  }),\n)\n\ninterface SelectButtonProps {\n  node: Instance<typeof Node>\n  onClick: React.MouseEventHandler\n  className?: string\n}\n\nexport const SelectButton: React.FunctionComponent<SelectButtonProps> = ({\n  node,\n  className,\n  onClick,\n}) => {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  return useGraph(graph => (\n    <div className={[classes.root, className].join(' ')}>\n      <ButtonGroup\n        variant=\"text\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        className={classes.buttonGroup}\n      >\n        <Button\n          startIcon={<CropFreeIcon />}\n          onClick={onClick}\n          className={classes.selectButton}\n        >\n          select\n        </Button>\n        <Button\n          size=\"small\"\n          disabled={graph.selectedNodes.size === 0}\n          aria-controls={open ? 'select-button' : undefined}\n          aria-expanded={open ? 'true' : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={() => setOpen(value => !value)}\n          className={classes.dropButton}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        disablePortal\n        className={classes.popper}\n      >\n        {({ placement }) => {\n          graph.setCursorNode(node)\n          return (\n            <ClickAwayListener onClickAway={() => setOpen(false)}>\n              <Paper>\n                <MenuList id=\"select-button\">\n                  <MenuItem\n                    onClick={() => {\n                      graph.moveSelectedNodes()\n                      setOpen(false)\n                    }}\n                  >\n                    <FolderIcon />\n                    Move here\n                  </MenuItem>\n\n                  <MenuItem\n                    disabled\n                    onClick={() => {\n                      setOpen(false)\n                    }}\n                  >\n                    <FileCopyIcon />\n                    Copy here\n                  </MenuItem>\n\n                  <MenuItem\n                    divider\n                    onClick={() => {\n                      graph.linkSelectedNodes()\n                      setOpen(false)\n                    }}\n                  >\n                    <FlipToBackIcon />\n                    Link here\n                  </MenuItem>\n\n                  {/* <MenuItem */}\n                  {/*   onClick={() => { */}\n                  {/*     graph.deleteSelectedNodes() */}\n                  {/*     setOpen(false) */}\n                  {/*   }} */}\n                  {/*   className={classes.deleteButton} */}\n                  {/* > */}\n                  {/*   <DeleteIcon /> */}\n                  {/*   Delete */}\n                  {/* </MenuItem> */}\n\n                  <MenuItem\n                    onClick={() => {\n                      graph.removeSelectedNodes()\n                      setOpen(false)\n                    }}\n                    className={classes.deleteButton}\n                  >\n                    <DeleteIcon />\n                    Remove\n                  </MenuItem>\n                </MenuList>\n              </Paper>\n            </ClickAwayListener>\n          )\n        }}\n      </Popper>\n    </div>\n  ))\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  Toolbar,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport EditIcon from '@material-ui/icons/Edit'\nimport GroupIcon from '@material-ui/icons/Group'\nimport { Instance } from 'mobx-state-tree'\nimport { useNavigate } from '@reach/router'\n\nimport { makeUrl } from 'route'\nimport { isRootPath } from 'common'\nimport { SelectButton } from 'select'\n\nimport { Node, useGraph, LabelEditor } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      justifyContent: 'center',\n    },\n    button: {\n      color: theme.palette.text.primary,\n    },\n    toggledButton: {\n      color: theme.palette.primary.main,\n    },\n    labelEditor: {\n      width: '100%',\n    },\n  }),\n)\n\ninterface NodeActionsProps {\n  node: Instance<typeof Node>\n  className?: string\n}\n\ntype ActionMode = 'normal' | 'add' | 'edit' | 'share'\n\nexport const NodeActions: React.FunctionComponent<NodeActionsProps> = ({\n  node,\n  className,\n}) => {\n  const classes = useStyles()\n  const [mode, setMode] = React.useState<ActionMode>('normal')\n  const navigate = useNavigate()\n\n  return useGraph(graph => {\n    const hasChildren = node.childCount > 0\n    const selectedCount = graph.selectedNodes.size ?? 0\n\n    return (\n      <Toolbar variant=\"dense\" className={[classes.root, className].join(' ')}>\n        {mode === 'normal' && (\n          <>\n            <Button\n              startIcon={<AddIcon />}\n              onClick={() => {\n                setMode('add')\n              }}\n              className={classes.button}\n            >\n              new\n            </Button>\n\n            {hasChildren && (\n              <Button\n                startIcon={<EditIcon />}\n                onClick={() => graph.toggleActiveMode('edit')}\n                className={[\n                  classes.button,\n                  graph.activeModes.includes('edit')\n                    ? classes.toggledButton\n                    : '',\n                ].join(' ')}\n              >\n                edit\n              </Button>\n            )}\n\n            {(hasChildren || selectedCount > 0) && (\n              <SelectButton\n                node={node}\n                onClick={() => {\n                  graph.setCursorNode(node)\n                  graph.toggleActiveMode('select')\n                }}\n                className={[\n                  classes.button,\n                  graph.activeModes.includes('select')\n                    ? classes.toggledButton\n                    : '',\n                ].join(' ')}\n              />\n            )}\n\n            {isRootPath() || (\n              <Button\n                disabled\n                startIcon={<GroupIcon />}\n                onClick={() => {\n                  if (graph.activeModes.includes('share')) {\n                    graph.closePeerConnection()\n                  } else {\n                    graph.offerPeerConnection(node)\n                  }\n                }}\n                color={\n                  graph.activeModes.includes('share') ? 'primary' : 'default'\n                }\n                className={classes.button}\n              >\n                share\n              </Button>\n            )}\n          </>\n        )}\n\n        {mode === 'add' && (\n          <LabelEditor\n            placeholder=\"Label\"\n            onValue={(value, event) => {\n              if (value) {\n                const child = graph.createChild(node, { label: value })\n\n                if (event?.ctrlKey) {\n                  navigate(makeUrl(`/node/${child.id}/`)).then(() => {\n                    setMode('add')\n                  })\n                }\n\n                return ''\n              } else {\n                setMode('normal')\n              }\n            }}\n            className={classes.labelEditor}\n          />\n        )}\n      </Toolbar>\n    )\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { AppBar, Box } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { Instance } from 'mobx-state-tree'\n\nimport { TitleBar } from 'common'\n\nimport { Node, useGraph, NodeActions } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    actions: {\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    children: {\n      marginTop: -theme.spacing(1),\n    },\n  }),\n)\n\ninterface LayoutProps {\n  node: Instance<typeof Node>\n  className?: string\n}\n\nexport const NodeLayout: React.FunctionComponent<LayoutProps> = ({\n  node,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  return useGraph(graph => (\n    <Box className={[classes.root, className].join(' ')}>\n      <AppBar elevation={0} position=\"sticky\">\n        <TitleBar title={node.label} />\n        <NodeActions node={node} className={classes.actions} />\n      </AppBar>\n      <Box className={classes.children}>{children}</Box>\n    </Box>\n  ))\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  Checkbox,\n  Button,\n  IconButton,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core'\nimport Check from '@material-ui/icons/Check'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { createStyles, makeStyles, fade, Theme } from '@material-ui/core/styles'\nimport { Instance } from 'mobx-state-tree'\nimport { Link, useNavigate } from '@reach/router'\n\nimport { makeUrl } from 'route'\nimport { useGraph, Node, LabelEditor } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n\n    listItem: {\n      marginBottom: '1px',\n      '&:hover': { color: theme.palette.primary.main },\n      '&.editMode:hover': {\n        cursor: 'text',\n        color: 'unset',\n      },\n      '&.MuiListItem-button': {\n        backgroundColor: 'unset',\n      },\n      '&.isSelected': {\n        backgroundColor: fade(theme.palette.primary.main, 0.3),\n        '&:hover': {\n          color: 'unset',\n        },\n        '& a:hover': {\n          color: 'unset',\n        },\n      },\n      [theme.breakpoints.up('sm')]: {\n        borderRadius: theme.shape.borderRadius,\n      },\n    },\n\n    itemText: {\n      margin: 0,\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '& .MuiListItemText-primary': {\n        display: 'inline',\n      },\n      '& .MuiListItemText-secondary': {\n        display: 'inline',\n        paddingLeft: theme.spacing(1),\n      },\n      '&.expand': {\n        '& .MuiListItemText-secondary': {\n          display: 'block',\n          paddingLeft: 0,\n        },\n      },\n    },\n\n    listItemSelectCheckbox: {\n      padding: theme.spacing(0, 1, 0, 1),\n      '&:hover, &.Mui-checked:hover': {\n        backgroundColor: 'unset',\n      },\n    },\n\n    listItemIcon: {\n      minWidth: 'auto',\n    },\n\n    editItemText: {\n      display: 'inline-block',\n      margin: 0,\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      ...theme.typography.body1,\n    },\n\n    secondaryActions: {\n      right: 0,\n    },\n\n    childButton: {\n      color: theme.palette.text.primary,\n\n      // Ensure ChevronRight lines up without a label\n      minWidth: 'unset',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n\n      '&:hover, &:focus': {\n        color: theme.palette.primary.main,\n        background: 'inherit',\n      },\n    },\n  }),\n)\n\ninterface NodeListItemProps {\n  node: Instance<typeof Node>\n  expandSecondaryTypography?: boolean\n}\n\nexport const NodeListItem: React.FunctionComponent<NodeListItemProps> = ({\n  node,\n  expandSecondaryTypography,\n  ...props\n}) => {\n  const classes = useStyles()\n  const navigate = useNavigate()\n  const [isEditing, setIsEditing] = React.useState(false)\n  /* const isMouseDown = React.useRef(false) */\n  /* const timer = React.useRef<ReturnType<typeof setTimeout>>() */\n\n  return useGraph(graph => {\n    /* const downHandler: React.EventHandler<React.SyntheticEvent> = e => { */\n    /*   e.preventDefault() */\n    /*   e.persist() */\n\n    /*   isMouseDown.current = true */\n\n    /*   timer.current = setTimeout(() => { */\n    /*     isMouseDown.current = false */\n\n    /*     if (graph.activeModes.includes('edit')) { */\n    /*       return */\n    /*     } */\n\n    /*     if (timer.current) { */\n    /*       clearTimeout(timer.current) */\n    /*     } */\n\n    /*     graph.toggleActiveMode('select') */\n    /*     if (graph.activeModes.includes('select')) { */\n    /*       graph.toggleSelectNode(node) */\n    /*     } */\n    /*   }, 190) */\n    /* } */\n\n    /* const upHandler: React.EventHandler<React.SyntheticEvent> = e => { */\n    /*   if (!isMouseDown.current) { */\n    /*     return */\n    /*   } */\n\n    /*   isMouseDown.current = false */\n    /*   e.preventDefault() */\n\n    /*   if (graph.activeModes.includes('select')) { */\n    /*     graph.toggleSelectNode(node) */\n    /*   } else if (graph.activeModes.includes('edit')) { */\n    /*     setIsEditing(true) */\n    /*   } else { */\n    /*     navigate(makeUrl(`/node/${node.id}`)) */\n    /*   } */\n\n    /*   if (timer.current) { */\n    /*     clearTimeout(timer.current) */\n    /*   } */\n    /* } */\n\n    const clickHandler: React.EventHandler<React.MouseEvent> = e => {\n      e.preventDefault()\n\n      if (graph.activeModes.includes('select')) {\n        graph.toggleSelectNode(node)\n      } else if (graph.activeModes.includes('edit')) {\n        setIsEditing(true)\n      } else if (e.metaKey || e.ctrlKey) {\n        graph.toggleActiveMode('select')\n        graph.toggleSelectNode(node)\n      } else {\n        graph.setCursorNode(node)\n        navigate(makeUrl(`/node/${node.id}/`))\n      }\n    }\n\n    const isSelected = graph.selectedNodes\n      .get(graph.cursorNode?.id)\n      ?.includes(node.id)\n\n    const newlinePosition = node.label.indexOf('\\n')\n\n    return (\n      <ListItem\n        button\n        disableRipple\n        component={'li'}\n        onClick={clickHandler}\n        className={[\n          classes.listItem,\n          graph.activeModes.includes('edit') ? 'editMode' : '',\n          isSelected ? 'isSelected' : '',\n        ].join(' ')}\n      >\n        {isEditing ? (\n          <LabelEditor\n            label={node.label}\n            onValue={value => {\n              setIsEditing(false)\n              if (value) {\n                node.setLabel(value)\n              }\n            }}\n          />\n        ) : (\n          <ListItemText\n            primary={\n              newlinePosition > 0\n                ? node.label.slice(0, newlinePosition)\n                : node.label\n            }\n            secondary={\n              newlinePosition > 0\n                ? node.label.slice(newlinePosition + 1)\n                : undefined\n            }\n            className={[\n              classes.itemText,\n              expandSecondaryTypography ? 'expand' : '',\n            ].join(' ')}\n          />\n        )}\n        <ListItemSecondaryAction className={classes.secondaryActions}>\n          {(node.childCount > 0 || graph.activeModes.includes('select')) && (\n            <Button\n              to={makeUrl(`/node/${node.id}/`)}\n              component={Link}\n              onClick={() => graph.setCursorNode(node)}\n              className={classes.childButton}\n              endIcon={<ChevronRightIcon />}\n              size=\"small\"\n            >\n              {node.childCount > 0 && node.childCount}\n            </Button>\n          )}\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  })\n}\n\nNodeListItem.defaultProps = {\n  expandSecondaryTypography: true,\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\n\nimport { NodeLayout, EdgeList, useGraph } from 'graph'\n\ninterface NodeViewerProps {\n  id?: string\n}\n\nexport const NodeViewer: React.FunctionComponent<NodeViewerProps> = ({ id }) =>\n  useGraph(graph => {\n    let node = graph.rootNode\n    const lookup = graph.Node.get(id)\n\n    if (lookup) {\n      node = lookup\n    }\n\n    return node ? (\n      <NodeLayout node={node}>\n        <EdgeList node={node} edgeTag=\"child\" />\n      </NodeLayout>\n    ) : null\n  })\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport * as reach from '@reach/router'\n\nimport { useGraph } from 'graph'\nimport { NodeViewer } from 'graph'\nimport { PeerConnector } from 'peer'\nimport { Settings } from 'config'\n\n// Necessary for now because this routing library is bad.\nexport function makeUrl(path: string = ''): string {\n  return process.env.PUBLIC_URL + path\n}\n\nexport type RouteProps<T = unknown> = {\n  component: React.FunctionComponent<T>\n} & reach.RouteComponentProps\n\nexport const Route: React.FunctionComponent<RouteProps> = ({\n  component: Component,\n  ...props\n}) => <Component {...props} />\n\nexport const Router: React.FunctionComponent = () =>\n  useGraph(graph =>\n    graph.rootNode ? (\n      <reach.Router basepath={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={NodeViewer} />\n        <Route path=\":type/:id\" component={NodeViewer} />\n        <Route path=\"peer/:id\" component={PeerConnector} />\n        <Route path=\"settings\" component={Settings} />\n      </reach.Router>\n    ) : null,\n  )\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nexport const useDarkMode = (): ReturnType<typeof useMediaQuery> =>\n  useMediaQuery('(prefers-color-scheme: dark)')\n\nexport const ThemeProvider: React.FunctionComponent = ({ children }) => {\n  const prefersDarkMode = useDarkMode()\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        typography: {\n          fontFamily: [\n            '-apple-system',\n            'system-ui',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n          ].join(', '),\n        },\n\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: { main: '#f94d94' },\n          background: {\n            default: prefersDarkMode ? '#000000' : '#ffffff',\n          },\n          text: {\n            primary: prefersDarkMode\n              ? 'rgba(255, 255, 255, .8)'\n              : 'rgba(0, 0, 0, .8)',\n            secondary: prefersDarkMode\n              ? 'rgba(255, 255, 255, .42)'\n              : 'rgba(0, 0, 0, .42)',\n          },\n        },\n\n        shape: {\n          borderRadius: 6,\n        },\n\n        props: {\n          /* MuiButtonBase: { */\n          /*   disableRipple: true, */\n          /* }, */\n          MuiButton: {\n            disableElevation: true,\n          },\n          MuiButtonGroup: {\n            disableElevation: true,\n          },\n        },\n\n        overrides: {\n          MuiCssBaseline: {\n            '@global': {\n              html: {\n                userSelect: 'none',\n                overscrollBehavior: 'none',\n                '-webkit-touch-callout': 'none',\n                maxWidth: '600px',\n                margin: 'auto',\n                '&, & body': {\n                  height: '100%',\n                },\n              },\n\n              /* '#root': { */\n              /*   height: '100%', */\n              /*   backgroundImage: 'url(/background.jpg)', */\n              /*   backgroundSize: 'cover', */\n              /* }, */\n            },\n          },\n        },\n      }),\n\n    [prefersDarkMode],\n  )\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MuiThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable no-console */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'mobx-react-lite/batchingForReactDom'\n\nimport { StoreProvider } from './store'\nimport { ThemeProvider } from './theme'\nimport { Router } from './route'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <ThemeProvider>\n        <Router />\n      </ThemeProvider>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nserviceWorker.register()\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { AppBar, Box } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { TitleBar } from 'common'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    appBar: {},\n    actions: {\n      width: '100%',\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    children: {},\n  }),\n)\n\ninterface LayoutProps {\n  title?: string\n  actions?: React.ReactElement\n  className?: string\n}\n\nexport const Layout: React.FunctionComponent<LayoutProps> = ({\n  title,\n  actions,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  return (\n    <Box className={[classes.root, className].join(' ')}>\n      <AppBar elevation={0} position=\"sticky\" className={classes.appBar}>\n        <TitleBar title={title} />\n        {actions}\n      </AppBar>\n      <Box className={classes.children}>{children}</Box>\n    </Box>\n  )\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types, IAnyType } from 'mobx-state-tree'\n\nexport const Unknown = types.union(\n  types.null,\n  types.boolean,\n  types.string,\n  types.number,\n  types.array(types.late((): IAnyType => Unknown)),\n  types.map(types.late((): IAnyType => Unknown)),\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Typography, Toolbar, IconButton } from '@material-ui/core'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { Link } from '@reach/router'\n\nimport { makeUrl } from 'route'\nimport { isRootPath } from 'common'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    backButton: {\n      '&[disabled]': {\n        visibility: 'hidden',\n        pointerEvents: 'none',\n      },\n    },\n    hide: {\n      visibility: 'hidden',\n      mouseEvents: 'none',\n    },\n    settingsButton: {},\n    title: {\n      flexGrow: 1,\n      textAlign: 'center',\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      color: theme.palette.text.primary,\n    },\n  }),\n)\n\ninterface TitleBarProps {\n  title?: string\n  showBackButton?: boolean\n  showSettingsButton?: boolean\n  className?: string\n}\n\nexport const TitleBar: React.FunctionComponent<TitleBarProps> = ({\n  title,\n  showBackButton,\n  showSettingsButton,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  const newlinePosition = title?.indexOf('\\n') ?? -1\n\n  return (\n    <Toolbar variant=\"dense\" className={[classes.root, className].join(' ')}>\n      <IconButton\n        disabled={isRootPath()}\n        edge=\"start\"\n        aria-label=\"back\"\n        onClick={() => window.history.back()}\n        className={[\n          classes.backButton,\n          showBackButton ? '' : classes.hide,\n        ].join(' ')}\n      >\n        <ChevronLeftIcon />\n      </IconButton>\n\n      {title && (\n        <Typography variant=\"h6\" className={classes.title}>\n          {newlinePosition > 0 ? title.slice(0, title.indexOf('\\n')) : title}\n        </Typography>\n      )}\n\n      <IconButton\n        disabled\n        edge=\"end\"\n        component={Link}\n        to={makeUrl(`/settings`)}\n        aria-label=\"settings\"\n        className={[\n          classes.settingsButton,\n          showSettingsButton ? '' : classes.hide,\n        ].join(' ')}\n      >\n        {<SettingsIcon fontSize=\"small\" />}\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nTitleBar.defaultProps = {\n  title: 'Exuo',\n  showBackButton: true,\n  showSettingsButton: false,\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { makeUrl } from 'route'\n\nexport const isRootPath = (): boolean =>\n  window.location.pathname === makeUrl('/') ||\n  window.location.pathname === makeUrl()\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  Instance,\n  onPatch,\n  getSnapshot,\n  getMembers,\n  applySnapshot,\n  IAnyModelType,\n  isStateTreeNode,\n} from 'mobx-state-tree'\nimport Dexie from 'dexie'\n\nexport async function persist(\n  instance: Instance<IAnyModelType>,\n): Promise<void> {\n  const db = new Dexie('default')\n  const tableNames = Object.keys(getMembers(instance).properties)\n  const tableConfig = Object.fromEntries(tableNames.map(name => [name, 'id']))\n\n  db.version(1).stores(tableConfig)\n\n  return Promise.all(\n    tableNames.map(name =>\n      db\n        .table(name)\n        .toArray()\n        .then(rows => [name, Object.fromEntries(rows.map(r => [r.id, r]))]),\n    ),\n  ).then(resolved => {\n    applySnapshot(instance, Object.fromEntries(resolved))\n    onPatch(instance, patch => {\n      const [typeName, id, propName] = patch.path.split('/').slice(1)\n\n      if (patch.op === 'add') {\n        db.table(typeName).put(getSnapshot(instance[typeName].get(id)))\n      } else if (patch.op === 'replace' || patch.op === 'remove') {\n        if (propName) {\n          let propValue = instance[typeName].get(id)[propName]\n\n          if (isStateTreeNode(propValue)) {\n            propValue = getSnapshot(propValue)\n          }\n\n          db.table(typeName).update(id, {\n            [propName]: propValue,\n          })\n        } else {\n          db.table(typeName).delete(id)\n        }\n      } else {\n        throw Error(`Unknown patch op '${patch.op}'`)\n      }\n    })\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\n\nimport { Graph } from 'graph'\n\nimport { Store } from './Store'\n\nconst store = Store.create({\n  graph: Graph.create(),\n})\n\nexport const storeContext = React.createContext<Instance<typeof Store>>(store)\n\nexport const StoreProvider: React.FunctionComponent = ({ children }) =>\n  React.createElement(storeContext.Provider, { value: store }, children)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { List, ListItem, ListItemText } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { getMembers, Instance, isStateTreeNode } from 'mobx-state-tree'\n\nimport { useGraph, Node } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    item: {},\n    itemText: {},\n  }),\n)\n\ninterface PropertyEditorProps {\n  node?: Instance<typeof Node> | string\n  propName?: string\n  minimal?: boolean\n}\n\nexport const PropertyEditor: React.FunctionComponent<PropertyEditorProps> = props => {\n  const classes = useStyles()\n\n  return useGraph(graph => {\n    let node = props.node\n    if (typeof node === 'string') {\n      node = graph.Node.get(props.node)\n    }\n\n    if (!isStateTreeNode(node)) {\n      return <></> // Loading\n    }\n\n    const members = getMembers(node)\n    const properties = Object.keys(members.properties)\n\n    const handleSubmit: React.EventHandler<React.SyntheticEvent> = () => {\n      console.log('submit')\n    }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <List className={classes.root}>\n          {properties.map(value => (\n            <ListItem dense button key={value} className={classes.item}>\n              <ListItemText\n                primary={value}\n                id={`list-label-${value}`}\n                className={classes.itemText}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </form>\n    )\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types } from 'mobx-state-tree'\n\nimport { Graph } from 'graph'\n\nexport const Store = types\n  .model('Store', {\n    graph: Graph,\n    location: types.optional(types.string, '/'),\n  })\n  .actions(self => ({\n    setLocation(path: string) {\n      self.location = path\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { useObserver } from 'mobx-react-lite'\n\nimport { Store, storeContext } from 'store'\n\nexport function useStore<S>(selector: (s: Instance<typeof Store>) => S): S {\n  const store = React.useContext(storeContext)\n  if (store) {\n    return useObserver(() => selector(store))\n  } else {\n    throw Error('Cannot use store before setup')\n  }\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types as t, SnapshotIn, Instance } from 'mobx-state-tree'\n\nimport { Unknown } from 'common'\n\nexport const Config = t\n  .model('Config', {\n    name: t.maybe(t.string),\n    items: t.map(Unknown),\n  })\n  .actions(self => ({\n    set(key: string, value: SnapshotIn<typeof Unknown>) {\n      self.items.set(key, value)\n    },\n  }))\n  .views(self => ({\n    get(key: string): Instance<typeof Unknown> {\n      return self.items.get(key)\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Switch,\n} from '@material-ui/core'\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck'\nimport BorderAllIcon from '@material-ui/icons/BorderAll'\nimport AccountTreeIcon from '@material-ui/icons/AccountTree'\n\nimport { Layout } from 'common'\nimport { useGraph } from 'graph'\n\nexport const Settings: React.FunctionComponent = () => {\n  return useGraph(graph => (\n    <Layout>\n      <List subheader={<ListSubheader>Global</ListSubheader>}>\n        <ListItem>\n          <ListItemIcon>\n            <BorderAllIcon />\n          </ListItemIcon>\n          <ListItemText id=\"switch-list-label-dividers\" primary=\"Dividers\" />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-dividers',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n      <List subheader={<ListSubheader>Lists</ListSubheader>}>\n        <ListItem>\n          <ListItemIcon>\n            <PlaylistAddCheckIcon />\n          </ListItemIcon>\n          <ListItemText\n            id=\"switch-list-label-checkboxes\"\n            primary=\"Checkboxes\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              checked={graph.listCheckboxSetting ?? false}\n              onChange={() => graph.toggleListCheckboxSetting()}\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-checkboxes',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <BorderAllIcon />\n          </ListItemIcon>\n          <ListItemText id=\"switch-list-label-dividers\" primary=\"Dividers\" />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-dividers',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <AccountTreeIcon />\n          </ListItemIcon>\n          <ListItemText\n            id=\"switch-list-label-bluetooth\"\n            primary=\"Show Extra Edge Types\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Layout>\n  ))\n}\n"],"sourceRoot":""}