{"version":3,"sources":["graph/utils.ts","graph/models/factories.ts","store/persist.ts","graph/models/Unknown.ts","graph/models/Node.ts","graph/models/Config.ts","graph/models/View.ts","graph/models/Graph.ts","common/Layout.tsx","common/TitleBar.tsx","common/Settings.tsx","common/utils.tsx","peer/PeerConnector.tsx","route.tsx","note/models/Note.ts","note/NoteEditor.tsx","graph/components/NodeListItem.tsx","graph/components/EdgeList.tsx","graph/components/LabelEditor.tsx","select/SelectButton.tsx","graph/components/NodeActions.tsx","graph/components/NodeLayout.tsx","graph/components/NodeViewer.tsx","store/StoreProvider.tsx","graph/components/NodeContextMenu.tsx","store/models/Store.ts","store/useStore.ts","store/components/InstanceViewer.tsx","store/components/PropertyEditor.tsx","theme.tsx","serviceWorker.ts","index.tsx"],"names":["useGraph","useStore","graph","activeContext","React","createContext","ActiveProvider","Provider","useActive","active","useContext","Error","edgeMapFactory","getEdgeType","types","model","edgeMap","map","array","safeReference","late","acceptsUndefined","actions","self","hasEdge","tag","target","Boolean","get","includes","length","addEdge","has","set","push","removeEdge","remove","reorderEdge","newIndex","currentIndex","edges","index","undefined","indexOf","item","splice","getEdgeTag","nodeFactory","models","compose","id","identifier","concat","named","graphFactory","nodeModels","options","Object","fromEntries","keys","key","isModelType","isIdentifierType","properties","createNode","modelName","props","node","create","getId","uuid","put","NodeBase","Node","instance","a","db","Dexie","tableNames","getMembers","tableConfig","name","version","stores","flushBuffer","buffer","forEach","patch","path","split","slice","typeName","propertyName","op","table","getSnapshot","propertyValue","isStateTreeNode","update","delete","Promise","all","toArray","then","rows","r","resolved","applySnapshot","timeout","onPatch","clearTimeout","setTimeout","Unknown","union","null","boolean","string","number","View","content","setContent","initView","value","view","graphRoot","views","getParentOfType","Graph","size","edgeTag","Config","maybe","items","ViewItem","expanded","optional","setExpanded","getItem","initItem","setActiveMode","mode","activeModes","clearSelectedNodes","unsetActiveMode","toggleActiveMode","toggleSelectNode","parentNode","selectedNodes","nodeIds","clear","deleteSelectedNodes","nodeId","moveSelectedNodes","accessorId","accessor","copySelectedNodes","linkSelectedNodes","values","unlinkSelectedNodes","removeSelectedNodes","deleteNode","exportSelectedNodes","blob","Blob","JSON","stringify","toJSON","type","afterCreate","persist","catch","e","console","error","rootNode","system","rootNodeId","createChild","edgeProps","edgeType","child","config","count","useStyles","makeStyles","theme","createStyles","root","appBar","width","color","palette","text","secondary","backgroundColor","background","default","padding","spacing","children","Layout","title","className","classes","Box","join","AppBar","elevation","position","backButton","cursor","visibility","pointerEvents","primary","main","transition","transitions","duration","shortest","hide","mouseEvents","settingsButton","flexGrow","textAlign","overflowX","whiteSpace","textOverflow","TitleBar","showBackButton","showSettingsButton","newlinePosition","Toolbar","IconButton","disabled","isRootPath","edge","aria-label","onClick","window","history","back","Typography","variant","component","Link","to","makeUrl","fontSize","defaultProps","Settings","observer","List","subheader","ListSubheader","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Switch","inputProps","checked","listCheckboxSetting","onChange","toggleListCheckboxSetting","location","pathname","PeerConnector","useState","peerError","setPeerError","hasAccepted","setHasAccepted","navigate","useNavigate","align","mt","Button","seekPeerConnection","CircularProgress","process","Route","Component","Router","basepath","NodeViewer","BLOCK_TYPES","label","style","icon","INLINE_STYLES","getBlockStyle","block","getType","StyleButton","onToggle","onToggleWrap","preventDefault","onMouseDown","startIcon","BlockStyleControls","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","InlineStyleControls","currentStyle","getCurrentInlineStyle","wrapper","boxShadow","fade","backdrop","inputWrapper","outline","maxHeight","overflowY","border","typography","body2","body1","toolbar","justifyContent","marginRight","NoteEditor","forwardRef","ref","note","rawContent","placeholder","autoFocus","showBackdrop","showControls","showRichTextControls","wrapperClassName","inputClassName","onValue","onClickAway","onEscape","containerRef","useRef","editorRef","backdropRef","nodeContent","contentState","useMemo","convertFromRaw","parse","EditorState","createWithContent","ContentState","createFromText","setEditorState","isMobile","useMediaQuery","submitOnReturn","setSubmitOnReturn","setKey","useEffect","moveFocusToEnd","handleValue","event","convertToRaw","setRawContentState","getFirstBlock","getText","blocks","depth","inlineStyleRanges","isPlainText","getPlainText","forceSelection","getSelectionAfter","blockCount","getBlocksAsArray","Backdrop","open","transitionDuration","ClickAwayListener","mouseEvent","touchEvent","Fade","in","tabIndex","blockStyleFn","handleKeyCommand","command","newState","RichUtils","keyBindingFn","keyCode","shiftKey","getDefaultKeyBinding","spellCheck","inlineStyle","toggleInlineStyle","toggleBlockType","listItemContainer","borderTop","divider","paper","listItem","childList","marginLeft","itemText","margin","opacity","display","paddingLeft","listItemSelectCheckbox","listItemIcon","minWidth","noteEditor","zIndex","top","left","noteEditorInput","secondaryActions","right","edgeArrow","hint","paddingRight","NodeListItem","expandSecondaryTypography","moveItem","onContextMenu","listItemRef","modes","isEditing","setIsEditing","isSelected","isExpanded","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","height","hoverClientY","getClientOffset","y","drop","useDrag","canDrag","childNode","collect","isDragging","drag","secondaryText","primaryText","newlineIndex","altKey","metaKey","selected","ContainerProps","childCount","toggleExpand","endIcon","Collapse","unmountOnExit","EdgeList","list","borderBottom","outer","useCallback","buttonGroup","borderRight","selectCount","selectButton","deleteButton","popper","selectMenu","SelectButton","extraProps","anchorRef","selectedCount","selectedNodeCount","setOpen","showAltMenu","setShowAltMenu","downHandler","upHandler","document","addEventListener","removeEventListener","Popper","anchorEl","role","disablePortal","placement","Paper","MenuList","dense","MenuItem","log","breakpoints","up","insertButton","emphasize","NodeActions","hasChildren","paddingBottom","backdropFilter","titleBar","marginBottom","textEditor","bottom","transform","maxWidth","NodeLayout","titleText","ctrlKey","lookup","DndProvider","backend","HTML5Backend","store","setLocation","storeContext","StoreProvider","createElement","members","onSubmit","button","ThemeProvider","prefersDarkMode","createMuiTheme","fontFamily","shape","borderRadius","MuiButton","disableElevation","MuiButtonGroup","overrides","MuiButtonBase","MuiCssBaseline","html","userSelect","overscrollBehavior","body","CssBaseline","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","href","origin","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c075a9c0.chunk.js","sourcesContent":["/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\n\nimport { useStore } from 'store'\nimport { Graph, Node } from 'graph'\n\nexport const useGraph = (): Instance<typeof Graph> => useStore().graph\n\nexport const activeContext = React.createContext<Instance<typeof Node> | null>(\n  null,\n)\n\nexport const ActiveProvider = activeContext.Provider\n\nexport const useActive = (): Instance<typeof Node> => {\n  const active = React.useContext(activeContext)\n  if (active) {\n    return active\n  } else {\n    throw Error('Cannot use active Node before setup')\n  }\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  IAnyModelType,\n  IAnyType,\n  Instance,\n  isIdentifierType,\n  SnapshotIn,\n  isModelType,\n  types,\n} from 'mobx-state-tree'\nimport { v4 as uuid } from 'uuid'\n\nexport type ModelOrUnion = IAnyModelType | IAnyType\nexport type EdgeResolver = () => ModelOrUnion\nexport type ModelTable = Record<string, IAnyModelType>\n\nexport const edgeMapFactory = (getEdgeType: EdgeResolver): IAnyModelType =>\n  types\n    .model('EdgeMap', {\n      edgeMap: types.map(\n        types.array(\n          types.safeReference(types.late(getEdgeType), {\n            acceptsUndefined: false,\n          }),\n        ),\n      ),\n    })\n    .actions(self => ({\n      hasEdge(tag: string, target?: Instance<IAnyModelType>): boolean {\n        if (target) {\n          return Boolean(self.edgeMap.get(tag)?.includes(target))\n        } else {\n          return Boolean(self.edgeMap.get(tag)?.length)\n        }\n      },\n    }))\n    .actions(self => ({\n      addEdge<T extends Instance<IAnyModelType>>(tag: string, target: T): T {\n        if (!self.edgeMap.has(tag)) {\n          self.edgeMap.set(tag, [])\n        }\n\n        self.edgeMap.get(tag)?.push(target)\n\n        return target\n      },\n\n      removeEdge(tag: string, target: Instance<IAnyModelType>): void {\n        self.edgeMap.get(tag)?.remove(target)\n      },\n\n      reorderEdge(\n        tag: string,\n        target: Instance<IAnyModelType>,\n        newIndex: number,\n        currentIndex?: number,\n      ) {\n        const edges = self.edgeMap.get(tag)\n        if (!edges) return\n\n        let index = currentIndex\n        if (index === undefined) {\n          index = edges.indexOf(target)\n        }\n\n        const item = edges[index]\n        if (item !== target) {\n          throw Error('Invalid reorder target')\n        }\n\n        edges.splice(index, 1)\n        edges.splice(newIndex, 0, item)\n\n        return\n      },\n\n      getEdgeTag(tag: string): void | Array<Instance<IAnyModelType>> {\n        return self.edgeMap.get(tag)\n      },\n    }))\n\nexport const nodeFactory = (\n  models: IAnyModelType | Array<IAnyModelType> = [],\n): IAnyModelType =>\n  types\n    .compose(\n      // @ts-ignore\n      ...[\n        types.model({\n          id: types.identifier,\n        }),\n      ].concat(models),\n    )\n    .named('Node')\n\ninterface GraphFactoryOptions {\n  getId?: () => string\n}\n\nexport const graphFactory = (\n  nodeModels: ModelTable,\n  options: GraphFactoryOptions = {},\n): IAnyModelType =>\n  types\n    .model(\n      'Graph',\n      Object.fromEntries(\n        Object.keys(nodeModels).map(key => {\n          const model = nodeModels[key]\n\n          if (isModelType(model) && isIdentifierType(model.properties.id)) {\n            return [key, types.map(nodeModels[key])]\n          }\n\n          // Can't add an identifier because the model may be referenced\n          throw Error(`Model '${key}' requires 'id' identifier`)\n        }),\n      ),\n    )\n    .actions(self => ({\n      createNode(\n        modelName = 'Node',\n        props: SnapshotIn<IAnyModelType> = {},\n      ): Instance<IAnyModelType> {\n        if (!nodeModels[modelName]) {\n          throw Error(`No model named '${modelName}'`)\n        }\n\n        const node = nodeModels[modelName].create({\n          id: options.getId?.() ?? uuid(),\n          ...props,\n        })\n\n        self[modelName].put(node)\n\n        return node\n      },\n    }))\n\nexport const NodeBase = nodeFactory(edgeMapFactory(() => NodeBase))\nexport const GraphBase = graphFactory({ Node: NodeBase })\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  Instance,\n  onPatch,\n  getSnapshot,\n  getMembers,\n  applySnapshot,\n  IAnyModelType,\n  IJsonPatch,\n  isStateTreeNode,\n} from 'mobx-state-tree'\nimport Dexie from 'dexie'\n\nconst bufferLimit = 1000\nconst flushWait = 1000\n\nexport async function persist(\n  instance: Instance<IAnyModelType>,\n): Promise<void> {\n  const db = new Dexie('default')\n  const tableNames = Object.keys(getMembers(instance).properties)\n  const tableConfig = Object.fromEntries(tableNames.map(name => [name, 'id']))\n\n  db.version(1).stores(tableConfig)\n\n  const flushBuffer = (buffer: Array<IJsonPatch>): void => {\n    buffer.forEach(patch => {\n      const [typeName, id, propertyName] = patch.path.split('/').slice(1)\n\n      if (patch.op === 'add') {\n        db.table(typeName).put(getSnapshot(instance[typeName].get(id)))\n      } else if (patch.op === 'replace' || patch.op === 'remove') {\n        if (propertyName) {\n          let propertyValue = instance[typeName].get(id)[propertyName]\n\n          if (isStateTreeNode(propertyValue)) {\n            propertyValue = getSnapshot(propertyValue)\n          }\n\n          db.table(typeName).update(id, {\n            [propertyName]: propertyValue,\n          })\n        } else {\n          db.table(typeName).delete(id)\n        }\n      } else {\n        throw Error(`Unknown patch op '${patch.op}'`)\n      }\n    })\n  }\n\n  return Promise.all(\n    tableNames.map(name =>\n      db\n        .table(name)\n        .toArray()\n        .then(rows => [name, Object.fromEntries(rows.map(r => [r.id, r]))]),\n    ),\n  ).then(resolved => {\n    applySnapshot(instance, Object.fromEntries(resolved))\n\n    let buffer: Array<IJsonPatch> = []\n    let timeout: ReturnType<typeof setTimeout>\n\n    onPatch(instance, patch => {\n      buffer.push(patch)\n\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n\n      timeout = setTimeout(() => {\n        flushBuffer(buffer)\n        buffer = []\n      }, flushWait)\n\n      if (buffer.length > bufferLimit) {\n        flushBuffer(buffer)\n        buffer = []\n      }\n    })\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types, IAnyType } from 'mobx-state-tree'\n\nexport const Unknown = types.union(\n  types.null,\n  types.boolean,\n  types.string,\n  types.number,\n  types.array(types.late((): IAnyType => Unknown)),\n  types.map(types.late((): IAnyType => Unknown)),\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  types,\n  IAnyType,\n  Instance,\n  getParentOfType,\n  SnapshotIn,\n} from 'mobx-state-tree'\n\nimport { nodeFactory, edgeMapFactory, View, Graph } from 'graph'\n\n// Avoid circular dependency\nimport { Unknown } from 'graph/models/Unknown'\n\nexport const Node = nodeFactory([\n  edgeMapFactory(() =>\n    types.union(\n      types.late((): IAnyType => Node),\n      View,\n    ),\n  ),\n])\n  .props({\n    content: types.union(types.string, Unknown),\n  })\n\n  .actions(self => ({\n    setContent(content: string | Instance<typeof Unknown>): void {\n      self.content = content\n    },\n\n    initView(value?: SnapshotIn<typeof View>): Instance<typeof View> | void {\n      const view = self.view\n\n      if (!view) {\n        self.addEdge('view', self.graphRoot.createNode('View', value))\n      }\n\n      return self.view\n    },\n  }))\n\n  .views(self => ({\n    get childCount(): number {\n      return self.edgeMap.get('child')?.length ?? 0\n    },\n\n    get graphRoot(): Instance<typeof Graph> {\n      return getParentOfType(self, Graph)\n    },\n\n    get view(): Instance<typeof View> | void {\n      if (self.edgeMap.size) {\n        const edgeTag = self.edgeMap.get('view')\n        if (edgeTag && edgeTag.length) {\n          return edgeTag[0]\n        }\n      }\n\n      return undefined\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types, SnapshotIn, Instance } from 'mobx-state-tree'\n\nimport { nodeFactory } from 'graph'\nimport { Unknown } from './Unknown'\n\nconst ConfigBase = types\n  .model('Config', {\n    name: types.maybe(types.string),\n    items: types.map(Unknown),\n  })\n  .actions(self => ({\n    set(key: string, value: SnapshotIn<typeof Unknown>): void {\n      self.items.set(key, value)\n    },\n\n    get(key: string): Instance<typeof Unknown> {\n      return self.items.get(key)\n    },\n  }))\n\nexport const Config = nodeFactory(ConfigBase)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types, Instance } from 'mobx-state-tree'\n\nimport { nodeFactory } from 'graph'\n\nconst ViewItem = types\n  .model('ViewItem', {\n    expanded: types.optional(types.boolean, false),\n  })\n\n  .actions(self => ({\n    setExpanded(value: boolean) {\n      self.expanded = value\n    },\n  }))\n\nconst ViewBase = types\n  .model('View', {\n    items: types.map(ViewItem),\n  })\n\n  .views(self => ({\n    getItem(path: string): Instance<typeof ViewItem> | void {\n      if (self.items.size) {\n        return self.items.get(path)\n      }\n    },\n  }))\n\n  .actions(self => ({\n    initItem(path: string): Instance<typeof ViewItem> | void {\n      let item = self.getItem(path)\n      if (item) return item\n\n      item = ViewItem.create()\n      self.items.set(path, item)\n\n      return self.getItem(path)\n    },\n  }))\n\nexport const View = nodeFactory(ViewBase)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  Instance,\n  applySnapshot,\n  SnapshotIn,\n  IAnyModelType,\n} from 'mobx-state-tree'\n\nimport { persist } from 'store/persist'\n\nimport { graphFactory } from './factories'\nimport { Node } from './Node'\nimport { Config } from './Config'\nimport { View } from './View'\n\nexport const Graph = graphFactory({\n  Node,\n  Config,\n  View,\n})\n  .actions(self => ({\n    // TODO mode and select stuff don't belong here\n\n    setActiveMode(mode: string) {\n      const activeModes = self.activeModes\n      if (!activeModes?.includes(mode)) {\n        activeModes.push(mode)\n\n        if (mode === 'select') {\n          activeModes.remove('edit')\n        }\n\n        if (mode === 'edit') {\n          activeModes.remove('select')\n          self.clearSelectedNodes()\n        }\n      }\n    },\n\n    unsetActiveMode(mode: string) {\n      const activeModes = self.activeModes\n      if (activeModes?.includes(mode)) {\n        activeModes.remove(mode)\n      }\n    },\n\n    toggleActiveMode(mode: string) {\n      const activeModes = self.activeModes\n\n      if (!activeModes) {\n        return\n      }\n\n      if (activeModes.includes(mode)) {\n        activeModes.remove(mode)\n\n        if (mode === 'select') {\n          self.clearSelectedNodes()\n        }\n      } else {\n        activeModes.push(mode)\n\n        if (mode === 'select') {\n          activeModes.remove('edit')\n        }\n\n        if (mode === 'edit') {\n          activeModes.remove('select')\n          self.clearSelectedNodes()\n        }\n      }\n    },\n  }))\n\n  .actions(self => ({\n    toggleSelectNode(\n      node: Instance<typeof Node>,\n      parentNode: Instance<typeof Node>,\n    ) {\n      const selectedNodes = self.Config.get('system').get('selectedNodes')\n      if (!selectedNodes) {\n        return\n      }\n\n      const nodeIds = selectedNodes.get(parentNode.id)\n\n      if (nodeIds) {\n        if (nodeIds.includes(node.id)) {\n          nodeIds.remove(node.id)\n          if (nodeIds.length === 0) {\n            selectedNodes.delete(parentNode.id)\n          }\n        } else {\n          nodeIds.push(node.id)\n        }\n      } else {\n        selectedNodes.set(parentNode.id, [node.id])\n      }\n    },\n\n    clearSelectedNodes() {\n      self.Config.get('system').get('selectedNodes')?.clear()\n      if (self.selectedNodes.size === 0) {\n        self.unsetActiveMode('select')\n      }\n    },\n\n    deleteSelectedNodes() {\n      self.selectedNodes.forEach((nodeIds: Array<string>) =>\n        nodeIds.forEach((nodeId: string) => self.Node.delete(nodeId)),\n      )\n\n      self.clearSelectedNodes()\n    },\n\n    moveSelectedNodes(target: Instance<typeof Node>) {\n      for (const [accessorId, nodeIds] of self.selectedNodes) {\n        const accessor = self.Node.get(accessorId)\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.removeEdge('parent', accessor)\n            accessor.removeEdge('child', node)\n\n            node.addEdge('parent', target)\n            target.addEdge('child', node)\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    copySelectedNodes() {\n      //\n    },\n\n    linkSelectedNodes(target: Instance<typeof Node>) {\n      for (const nodeIds of self.selectedNodes.values()) {\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.addEdge('parent', target)\n            target.addEdge('child', node)\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    unlinkSelectedNodes() {\n      for (const [accessorId, nodeIds] of self.selectedNodes) {\n        const accessor = self.Node.get(accessorId)\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.removeEdge('parent', accessor)\n            accessor.removeEdge('child', node)\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    removeSelectedNodes() {\n      for (const [accessorId, nodeIds] of self.selectedNodes) {\n        const accessor = self.Node.get(accessorId)\n        for (const nodeId of nodeIds) {\n          const node = self.Node.get(nodeId)\n          if (node) {\n            node.removeEdge('parent', accessor)\n            accessor.removeEdge('child', node)\n            if (node.edgeMap.get('parent').size === 0) {\n              self.deleteNode(node)\n            }\n          }\n        }\n      }\n\n      self.clearSelectedNodes()\n    },\n\n    exportSelectedNodes(): Blob {\n      const blob = new Blob(\n        [JSON.stringify(self.selectedNodes.toJSON(), null, 2)],\n        { type: 'application/json' },\n      )\n\n      self.clearSelectedNodes()\n\n      // window.location.assign(URL.createObjectURL(blob))\n\n      return blob\n    },\n  }))\n\n  .actions(self => ({\n    afterCreate() {\n      persist(self)\n        .catch(e => {\n          console.error('Persist error', e)\n        })\n        .then(() => {\n          if (!self.rootNode) {\n            const rootNode = self.createNode('Node', { content: 'Locus' })\n            applySnapshot(self.Config, {\n              system: {\n                id: 'system',\n                items: {\n                  rootNodeId: rootNode.id,\n                  selectedNodes: {},\n                  activeModes: [],\n                },\n              },\n            })\n          }\n        })\n    },\n\n    createChild<T extends IAnyModelType>(\n      node: Instance<typeof Node>,\n      edgeProps: SnapshotIn<T>,\n      edgeType = 'Node',\n    ): Instance<typeof Node> {\n      const child = self.createNode(edgeType, edgeProps)\n\n      node.addEdge('child', child)\n      child.addEdge('parent', node)\n\n      return child\n    },\n\n    deleteNode(node: Instance<typeof Node>) {\n      self.Node.delete(node.id)\n    },\n  }))\n\n  .views(self => ({\n    get rootNode() {\n      const config = self.Config.get('system')\n      return self.Node.get(config?.get('rootNodeId'))\n    },\n\n    get activeModes() {\n      const config = self.Config.get('system')\n      return config?.get('activeModes')\n    },\n\n    get selectedNodes() {\n      const config = self.Config.get('system')\n      return config?.get('selectedNodes')\n    },\n\n    get selectedNodeCount() {\n      let count = 0\n\n      for (const [, value] of self.selectedNodes) {\n        count += value.length\n      }\n\n      return count\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { AppBar, Box } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { TitleBar } from 'common'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    appBar: {},\n    actions: {\n      width: '100%',\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    children: {},\n  }),\n)\n\ninterface LayoutProps {\n  title?: string\n  actions?: React.ReactElement\n  className?: string\n}\n\nexport const Layout: React.FunctionComponent<LayoutProps> = ({\n  title,\n  actions,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  return (\n    <Box className={[classes.root, className].join(' ')}>\n      <AppBar elevation={0} position=\"sticky\" className={classes.appBar}>\n        <TitleBar title={title} />\n        {actions}\n      </AppBar>\n      <Box className={classes.children}>{children}</Box>\n    </Box>\n  )\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Typography, Toolbar, IconButton } from '@material-ui/core'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { Link } from '@reach/router'\n\nimport { makeUrl } from 'route'\nimport { isRootPath } from 'common'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n\n    backButton: {\n      cursor: 'pointer',\n      '&[disabled]': {\n        visibility: 'hidden',\n        pointerEvents: 'none',\n      },\n\n      '&:hover': {\n        color: theme.palette.primary.main,\n      },\n\n      transition: theme.transitions.create(['color', 'background'], {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n\n    hide: {\n      visibility: 'hidden',\n      mouseEvents: 'none',\n    },\n\n    settingsButton: {},\n\n    title: {\n      flexGrow: 1,\n      textAlign: 'center',\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      color: theme.palette.text.primary,\n    },\n  }),\n)\n\ninterface TitleBarProps {\n  title?: string\n  showBackButton?: boolean\n  showSettingsButton?: boolean\n  className?: string\n}\n\nexport const TitleBar: React.FunctionComponent<TitleBarProps> = ({\n  title,\n  showBackButton,\n  showSettingsButton,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  const newlinePosition = title?.indexOf('\\n') ?? -1\n\n  return (\n    <Toolbar className={[classes.root, className].join(' ')}>\n      <IconButton\n        disabled={isRootPath()}\n        edge=\"start\"\n        aria-label=\"back\"\n        onClick={() => window.history.back()}\n        className={[\n          classes.backButton,\n          showBackButton ? '' : classes.hide,\n        ].join(' ')}\n      >\n        <ChevronLeftIcon />\n      </IconButton>\n\n      {title && (\n        <Typography variant=\"h6\" component=\"h1\" className={classes.title}>\n          {newlinePosition > 0 ? title.slice(0, title.indexOf('\\n')) : title}\n        </Typography>\n      )}\n\n      <IconButton\n        disabled\n        edge=\"end\"\n        component={Link}\n        to={makeUrl(`/settings`)}\n        aria-label=\"settings\"\n        className={[\n          classes.settingsButton,\n          showSettingsButton ? '' : classes.hide,\n        ].join(' ')}\n      >\n        {<SettingsIcon fontSize=\"small\" />}\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nTitleBar.defaultProps = {\n  title: 'Exuo',\n  showBackButton: true,\n  showSettingsButton: false,\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Switch,\n} from '@material-ui/core'\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck'\nimport BorderAllIcon from '@material-ui/icons/BorderAll'\nimport AccountTreeIcon from '@material-ui/icons/AccountTree'\n\nimport { Layout } from 'common'\nimport { useGraph } from 'graph'\n\nexport const Settings: React.FunctionComponent = observer(() => {\n  const graph = useGraph()\n  return (\n    <Layout>\n      <List subheader={<ListSubheader>Global</ListSubheader>}>\n        <ListItem>\n          <ListItemIcon>\n            <BorderAllIcon />\n          </ListItemIcon>\n          <ListItemText id=\"switch-list-label-dividers\" primary=\"Dividers\" />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-dividers',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n      <List subheader={<ListSubheader>Lists</ListSubheader>}>\n        <ListItem>\n          <ListItemIcon>\n            <PlaylistAddCheckIcon />\n          </ListItemIcon>\n          <ListItemText\n            id=\"switch-list-label-checkboxes\"\n            primary=\"Checkboxes\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              checked={graph.listCheckboxSetting ?? false}\n              onChange={() => graph.toggleListCheckboxSetting()}\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-checkboxes',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <BorderAllIcon />\n          </ListItemIcon>\n          <ListItemText id=\"switch-list-label-dividers\" primary=\"Dividers\" />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-dividers',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <AccountTreeIcon />\n          </ListItemIcon>\n          <ListItemText\n            id=\"switch-list-label-bluetooth\"\n            primary=\"Show Extra Edge Types\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Layout>\n  )\n})\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { makeUrl } from 'route'\n\nexport const isRootPath = (): boolean =>\n  window.location.pathname === makeUrl('/') ||\n  window.location.pathname === makeUrl()\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { Box, Button, Typography, CircularProgress } from '@material-ui/core'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { useNavigate } from '@reach/router'\n\nimport { Layout } from 'common'\nimport { makeUrl } from 'route'\nimport { useGraph } from 'graph'\n\ninterface PeerConnectorProps {\n  id?: string\n}\n\nexport const PeerConnector: React.FunctionComponent<PeerConnectorProps> = observer(\n  ({ id }) => {\n    const [peerError, setPeerError] = React.useState<null | Error>(null)\n    const [hasAccepted, setHasAccepted] = React.useState(false)\n    const navigate = useNavigate()\n    const graph = useGraph()\n\n    const handleAccept: React.EventHandler<React.SyntheticEvent> = () => {\n      setHasAccepted(true)\n      graph\n        .seekPeerConnection(id)\n        .then((instance: IAnyStateTreeNode) => {\n          navigate(makeUrl(`/node/${instance.id}`))\n        })\n        .catch((error: Error) => {\n          setPeerError(error)\n        })\n    }\n\n    return (\n      <Layout>\n        <Typography align=\"center\">\n          Someone wants to share content with you.\n          <br />\n          Do not accept if you do not trust them.\n        </Typography>\n        <Box mt={1} textAlign=\"center\">\n          {peerError ? (\n            <Typography color=\"error\">{peerError}</Typography>\n          ) : (\n            <Button\n              disabled={hasAccepted}\n              onClick={handleAccept}\n              color=\"primary\"\n            >\n              {hasAccepted ? <CircularProgress size={24} /> : 'Accept'}\n            </Button>\n          )}\n        </Box>\n      </Layout>\n    )\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport * as reach from '@reach/router'\n\nimport { useGraph } from 'graph'\nimport { NodeViewer } from 'graph'\nimport { PeerConnector } from 'peer'\nimport { Settings } from 'common'\n\n// Necessary for now because this routing library is bad.\nexport function makeUrl(path = ''): string {\n  return process.env.PUBLIC_URL + path\n}\n\nexport type RouteProps<T = unknown> = {\n  component: React.FunctionComponent<T>\n} & reach.RouteComponentProps\n\nexport const Route: React.FunctionComponent<RouteProps> = ({\n  component: Component,\n  ...props\n}) => <Component {...props} />\n\nexport const Router: React.FunctionComponent = observer(() => {\n  const graph = useGraph()\n  return graph.rootNode ? (\n    <reach.Router basepath={process.env.PUBLIC_URL}>\n      <Route path=\"/\" component={NodeViewer} />\n      <Route path=\":type/:id\" component={NodeViewer} />\n      <Route path=\"peer/:id\" component={PeerConnector} />\n      <Route path=\"settings\" component={Settings} />\n    </reach.Router>\n  ) : null\n})\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types } from 'mobx-state-tree'\nimport { convertToRaw } from 'draft-js'\n\nimport { nodeFactory } from 'graph'\n\n// Avoid circular dependency issue\nimport { Unknown } from 'graph/models/Unknown'\n\nconst NoteBase = types\n  .model('Note', {\n    content: types.maybe(Unknown),\n  })\n  .actions(self => ({\n    setContent(value: ReturnType<typeof convertToRaw>) {\n      self.content = value\n    },\n  }))\n\nexport const Note = nodeFactory(NoteBase)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport {\n  ClickAwayListener,\n  Backdrop,\n  Button,\n  IconButton,\n  Theme,\n  Toolbar,\n  createStyles,\n  Fade,\n  fade,\n  makeStyles,\n  useMediaQuery,\n} from '@material-ui/core'\nimport Code from '@material-ui/icons/Code'\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'\nimport FormatBoldIcon from '@material-ui/icons/FormatBold'\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic'\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined'\nimport SpaceBar from '@material-ui/icons/SpaceBar'\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered'\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted'\nimport {\n  ContentBlock,\n  ContentState,\n  DraftEditorCommand,\n  DraftHandleValue,\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  convertFromRaw,\n  convertToRaw,\n} from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nimport { Note } from './models/Note'\n\nexport const isPlainText = (\n  contentState: string | ReturnType<typeof convertToRaw>,\n): boolean => {\n  if (typeof contentState === 'string') {\n    return true\n  }\n\n  for (const block of contentState.blocks) {\n    if (\n      block.depth ||\n      block.type !== 'unstyled' ||\n      block.inlineStyleRanges.length\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\ninterface ButtonConfig {\n  label: string\n  style: string\n  icon?: React.ReactElement\n}\n\nconst BLOCK_TYPES: Array<ButtonConfig> = [\n  {\n    label: 'UL',\n    style: 'unordered-list-item',\n    icon: <FormatListNumberedIcon />,\n  },\n  { label: 'OL', style: 'ordered-list-item', icon: <FormatListBulletedIcon /> },\n  { label: 'Blockquote', style: 'blockquote', icon: <FormatQuoteIcon /> },\n  { label: 'Code Block', style: 'code-block', icon: <Code /> },\n]\n\nconst INLINE_STYLES: Array<ButtonConfig> = [\n  { label: 'Bold', style: 'BOLD', icon: <FormatBoldIcon /> },\n  { label: 'Italic', style: 'ITALIC', icon: <FormatItalicIcon /> },\n  { label: 'Underline', style: 'UNDERLINE', icon: <FormatUnderlinedIcon /> },\n  { label: 'Monospace', style: 'CODE', icon: <SpaceBar /> },\n]\n\nconst getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    default:\n      return ''\n  }\n}\n\ninterface StyleButtonProps {\n  onToggle: (inlineStyle: string) => void\n  style: string\n  active: boolean\n  label: string\n  icon?: React.ReactElement\n}\n\nconst StyleButton: React.FunctionComponent<StyleButtonProps> = ({\n  onToggle,\n  style,\n  active,\n  label,\n  icon,\n}) => {\n  const onToggleWrap: React.EventHandler<React.SyntheticEvent> = e => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  let className = 'RichEditor-styleButton'\n  if (active) {\n    className += ' RichEditor-activeButton'\n  }\n\n  return icon ? (\n    <IconButton size=\"small\" onMouseDown={onToggleWrap} className={className}>\n      {icon}\n    </IconButton>\n  ) : (\n    <Button\n      size=\"small\"\n      startIcon={icon ? icon : undefined}\n      onMouseDown={onToggleWrap}\n      className={className}\n    >\n      {icon ? '' : label}\n    </Button>\n  )\n}\n\ninterface BlockStyleControlsProps {\n  editorState: EditorState\n  onToggle: (style: string) => void\n}\n\nconst BlockStyleControls: React.FunctionComponent<BlockStyleControlsProps> = ({\n  editorState,\n  onToggle,\n}) => {\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n\n  return (\n    <div>\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          icon={type.icon}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\n\ninterface InlineStyleControlsProps {\n  editorState: EditorState\n  onToggle: (style: string) => void\n}\n\nconst InlineStyleControls: React.FunctionComponent<InlineStyleControlsProps> = ({\n  editorState,\n  onToggle,\n}) => {\n  const currentStyle = editorState.getCurrentInlineStyle()\n  return (\n    <div>\n      {INLINE_STYLES.map(type => (\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          icon={type.icon}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n\n    wrapper: {\n      '.multiLine &': {\n        boxShadow: `0 0 ${theme.spacing(2)}px ${theme.spacing(2)}px ${\n          theme.palette.background.default\n        }`,\n      },\n\n      background: `\n        linear-gradient(\n          to top,\n          ${fade(theme.palette.background.default, 0)},\n          ${fade(theme.palette.background.default, 1)} \\\n            ${theme.spacing(1) / 2}px calc(100% - ${theme.spacing(1) / 2}px),\n          ${fade(theme.palette.background.default, 0)}\n        ),\n        linear-gradient(\n          to right,\n          ${theme.palette.primary.main},\n          ${theme.palette.secondary.main} \n        )\n      `,\n    },\n\n    backdrop: {\n      backgroundColor: fade(theme.palette.background.default, 0.6),\n    },\n\n    inputWrapper: {\n      outline: 'none',\n\n      '& .DraftEditor-editorContainer': {\n        maxHeight: '70vh',\n        overflowY: 'auto',\n        border: 0,\n        padding: theme.spacing(1, 2, 1, 2),\n\n        '& [data-contents=true] > [data-block=true]': {\n          ...theme.typography.body2,\n          '&:first-child': {\n            ...theme.typography.body1,\n          },\n        },\n      },\n    },\n\n    toolbar: {\n      justifyContent: 'center',\n\n      // Tool button group spacing\n      '&>div:first-child': {\n        marginRight: theme.spacing(4),\n      },\n    },\n  }),\n)\n\n// TODO autofocus doesn't work on iOS12\n\ninterface NoteEditorProps {\n  note?: Instance<typeof Note>\n  text?: string\n  rawContent?: ReturnType<typeof convertToRaw>\n  placeholder?: string\n  autoFocus?: boolean\n  showBackdrop?: boolean\n  showControls?: boolean\n  showRichTextControls?: boolean\n  className?: string\n  wrapperClassName?: string\n  inputClassName?: string\n  onValue?: (\n    value?: Instance<typeof Note> | ContentState,\n    event?: React.KeyboardEvent | React.MouseEvent<HTMLDocument>,\n  ) => void | true\n  onClickAway?: () => void\n  onEscape?: () => void\n}\n\nexport const NoteEditor = React.forwardRef<HTMLDivElement, NoteEditorProps>(\n  function (\n    {\n      note,\n      text,\n      rawContent,\n      placeholder,\n      autoFocus,\n      showBackdrop,\n      showControls,\n      showRichTextControls,\n      className,\n      wrapperClassName,\n      inputClassName,\n      onValue,\n      onClickAway,\n      onEscape,\n    },\n    ref,\n  ) {\n    const classes = useStyles()\n\n    const containerRef = React.useRef<HTMLDivElement>(null)\n    const editorRef = React.useRef<Editor>(null)\n    const backdropRef = React.useRef<HTMLDivElement>(null)\n\n    const nodeContent = note?.nodeContent\n    const contentState = React.useMemo(\n      () =>\n        (nodeContent && convertFromRaw(JSON.parse(nodeContent))) ||\n        (rawContent && convertFromRaw(rawContent)),\n      [nodeContent, rawContent],\n    )\n\n    const [editorState, setEditorState] = React.useState(() =>\n      EditorState.createWithContent(\n        contentState ||\n          ContentState.createFromText(text ?? note?.content ?? ''),\n      ),\n    )\n\n    const isMobile = useMediaQuery('(pointer: coarse) and (hover: none)')\n    const [submitOnReturn, setSubmitOnReturn] = React.useState(!isMobile)\n\n    const [key, setKey] = React.useState(1)\n    const incrementKey = (): void => setKey(key + 1)\n\n    React.useEffect(() => {\n      if (autoFocus) {\n        setEditorState(EditorState.moveFocusToEnd(editorState))\n      }\n    }, [key]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    /* React.useEffect(() => { */\n    /*   containerRef.current?.scrollIntoView(false) */\n    /* }) */\n\n    const handleValue = (\n      event?:\n        | React.KeyboardEvent<HTMLInputElement>\n        | React.MouseEvent<HTMLDocument>,\n    ): void => {\n      const contentState = editorState.getCurrentContent()\n      const rawContent = convertToRaw(contentState)\n\n      if (note) {\n        note.setRawContentState(rawContent)\n        note.setContent(contentState.getFirstBlock().getText())\n      }\n\n      if (\n        onValue?.(\n          note || isPlainText(rawContent)\n            ? contentState.getPlainText()\n            : rawContent,\n          event,\n        )\n      ) {\n        incrementKey()\n\n        setEditorState(\n          EditorState.forceSelection(\n            EditorState.push(\n              EditorState.moveFocusToEnd(editorState),\n              ContentState.createFromText(''),\n              'remove-range',\n            ),\n            contentState.getSelectionAfter(),\n          ),\n        )\n      }\n    }\n\n    const handleClickAway = (event: React.MouseEvent<HTMLDocument>): void => {\n      if (onClickAway) {\n        onClickAway()\n      } else {\n        handleValue(event)\n      }\n    }\n\n    const handleKeyCommand = (\n      command: DraftEditorCommand,\n      editorState: EditorState,\n    ): DraftHandleValue => {\n      const newState = RichUtils.handleKeyCommand(editorState, command)\n      if (newState) {\n        setEditorState(newState)\n        return 'handled'\n      } else {\n        return 'not-handled'\n      }\n    }\n\n    const mapKeyToEditorCommand = (\n      event: React.KeyboardEvent,\n    ): DraftEditorCommand | null => {\n      if (event.keyCode === 13) {\n        if (\n          (submitOnReturn && !event.shiftKey) ||\n          (!submitOnReturn && event.shiftKey)\n        ) {\n          handleValue()\n          return null\n        } else {\n          setSubmitOnReturn(false)\n          return getDefaultKeyBinding(event)\n        }\n      } else if (event.keyCode === 27) {\n        onEscape?.()\n        return null\n      } else {\n        return getDefaultKeyBinding(event)\n      }\n    }\n\n    const toggleBlockType = (blockType: string): void => {\n      setEditorState(RichUtils.toggleBlockType(editorState, blockType))\n    }\n\n    const toggleInlineStyle = (inlineStyle: string): void => {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, inlineStyle))\n    }\n\n    const blockCount = editorState.getCurrentContent().getBlocksAsArray().length\n\n    return (\n      <div\n        ref={ref}\n        className={[\n          classes.root,\n          blockCount > 1 ? 'multiLine' : null,\n          className,\n        ].join(' ')}\n      >\n        {\n          <Backdrop\n            ref={backdropRef}\n            open={Boolean(blockCount > 1 && showBackdrop)}\n            className={classes.backdrop}\n            transitionDuration={3000}\n          />\n        }\n\n        <ClickAwayListener\n          mouseEvent={'onMouseDown'}\n          touchEvent={'onTouchStart'}\n          onClickAway={handleClickAway}\n        >\n          <Fade in={true} timeout={300}>\n            <div\n              ref={containerRef}\n              className={[classes.wrapper, wrapperClassName].join(' ')}\n            >\n              <div\n                tabIndex={-1}\n                className={[classes.inputWrapper, inputClassName].join(' ')}\n              >\n                <Editor\n                  key={key}\n                  ref={editorRef}\n                  blockStyleFn={getBlockStyle}\n                  editorState={editorState}\n                  handleKeyCommand={handleKeyCommand}\n                  keyBindingFn={mapKeyToEditorCommand}\n                  onChange={setEditorState}\n                  placeholder={placeholder}\n                  spellCheck={true}\n                />\n              </div>\n\n              {blockCount > 1 && showControls && (\n                <Toolbar variant=\"dense\" className={classes.toolbar}>\n                  {showRichTextControls && (\n                    <>\n                      <InlineStyleControls\n                        editorState={editorState}\n                        onToggle={toggleInlineStyle}\n                      />\n                      <BlockStyleControls\n                        editorState={editorState}\n                        onToggle={toggleBlockType}\n                      />\n                    </>\n                  )}\n                </Toolbar>\n              )}\n            </div>\n          </Fade>\n        </ClickAwayListener>\n      </div>\n    )\n  },\n)\n\nNoteEditor.defaultProps = {\n  showBackdrop: true,\n  showControls: true,\n  showRichTextControls: true,\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport {\n  Collapse,\n  Button,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core'\nimport { createStyles, makeStyles, fade, Theme } from '@material-ui/core/styles'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport { Instance } from 'mobx-state-tree'\nimport { useNavigate } from '@reach/router'\nimport { useDrag, useDrop, XYCoord } from 'react-dnd'\n\nimport { makeUrl } from 'route'\nimport { NoteEditor } from 'note'\nimport { useGraph, Node, EdgeList, useActive } from 'graph'\n\nconst isEditingBorderSelector = `&.isEditing, &.isEditing + li,\\\n  &.isEditing + .MuiCollapse-container > .MuiCollapse-wrapper > .MuiCollapse-wrapperInner > .MuiList-root > .MuiListItem-container:first-child`\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listItemContainer: {\n      borderTop: `.1px solid ${theme.palette.divider}`,\n\n      /* '&.isExpanded': { */\n      /*   backgroundColor: theme.palette.background.default, */\n      /*   position: 'sticky', */\n      /*   top: 60, */\n      /*   zIndex: theme.zIndex.appBar, */\n      /* }, */\n\n      [isEditingBorderSelector]: {\n        borderTop: `.1px solid transparent`,\n      },\n\n      transition: theme.transitions.create(['color', 'background'], {\n        duration: theme.transitions.duration.shortest,\n      }),\n\n      '&:hover': {\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.paper,\n      },\n\n      cursor: 'pointer',\n\n      '&.isEditing, .editMode &, .selectMode &': {\n        cursor: 'default',\n        color: 'unset',\n      },\n    },\n\n    listItem: {\n      position: 'relative',\n\n      '&.Mui-selected': {\n        background: `\n          linear-gradient(\n            to top,\n            ${fade(theme.palette.background.default, 0)},\n            ${fade(theme.palette.background.default, 0.9)} \\\n              ${theme.spacing(1) / 2}px calc(100% - ${theme.spacing(1) / 2}px),\n            ${fade(theme.palette.background.default, 0)}\n          ),\n          linear-gradient(\n            to right,\n            ${theme.palette.primary.main},\n            ${theme.palette.secondary.main} \n          )\n        `,\n\n        '&:hover': { color: 'unset' },\n        '& a:hover': { color: 'unset' },\n      },\n    },\n\n    childList: {\n      marginLeft: theme.spacing(4),\n      padding: 0,\n    },\n\n    itemText: {\n      margin: 0,\n\n      '.isDragging &': {\n        opacity: 0.5,\n      },\n\n      '&, & .MuiListItemText-secondary': {\n        overflowX: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n      },\n\n      '& .MuiListItemText-primary': {\n        display: 'inline',\n      },\n\n      '& .MuiListItemText-secondary': {\n        display: 'inline',\n        paddingLeft: theme.spacing(1),\n      },\n\n      '&.expand': {\n        '& .MuiListItemText-secondary': {\n          display: 'block',\n          paddingLeft: 0,\n        },\n      },\n    },\n\n    listItemSelectCheckbox: {\n      padding: theme.spacing(0, 1, 0, 1),\n      '&:hover, &.Mui-checked:hover': {\n        backgroundColor: 'unset',\n      },\n    },\n\n    listItemIcon: {\n      minWidth: 'auto',\n    },\n\n    noteEditor: {\n      zIndex: theme.zIndex.appBar - 1,\n      cursor: 'default',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n    },\n\n    noteEditorInput: {\n      cursor: 'text',\n    },\n\n    secondaryActions: {\n      display: 'none',\n\n      '&.hasChild, .selectMode &': {\n        display: 'unset',\n      },\n\n      right: 0,\n    },\n\n    edgeArrow: {\n      cursor: 'default',\n      color: theme.palette.text.hint,\n\n      '&:hover': {\n        background: 'inherit',\n      },\n\n      '.isExpanded &': {\n        color: theme.palette.text.primary,\n      },\n\n      '.selectMode &': {\n        cursor: 'pointer',\n        '&:hover': {\n          color: theme.palette.primary.main,\n        },\n      },\n\n      transition: theme.transitions.create(['color'], {\n        duration: theme.transitions.duration.shortest,\n      }),\n\n      // Ensure ChevronRight lines up without a label\n      minWidth: 'unset',\n\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n    },\n  }),\n)\n\ninterface DragItem {\n  type: string\n  index: number\n  path: string\n  parentNode: Instance<typeof Node>\n  childNode: Instance<typeof Node>\n}\n\ninterface NodeListItemProps {\n  node: Instance<typeof Node>\n  parentNode: Instance<typeof Node>\n  expandSecondaryTypography?: boolean\n  className?: string\n  index: number\n  moveItem: (item: DragItem, dragIndex: number, hoverIndex: number) => void\n  onContextMenu?: React.EventHandler<React.MouseEvent>\n}\n\nexport const NodeListItem: React.FunctionComponent<NodeListItemProps> = observer(\n  ({\n    node,\n    parentNode,\n    expandSecondaryTypography,\n    className,\n    index,\n    moveItem,\n    onContextMenu,\n  }) => {\n    const classes = useStyles()\n    const listItemRef = React.useRef<HTMLLIElement>(null)\n    const navigate = useNavigate()\n    const graph = useGraph()\n    const modes = graph.activeModes\n    const active = useActive()\n    const view = active.view\n\n    const [isEditing, setIsEditing] = React.useState(false)\n    const isSelected = graph.selectedNodes.get(parentNode.id)?.includes(node.id)\n    const isExpanded =\n      view?.getItem(`${parentNode.id}/${node.id}`)?.expanded ?? false\n\n    const toggleExpand = (): void => {\n      const view = active.initView()\n      const item = view.initItem(`${parentNode.id}/${node.id}`)\n      item.setExpanded(!item.expanded)\n    }\n\n    const handleArrowClick: React.EventHandler<React.MouseEvent> = e => {\n      if (modes.includes('select') || e.metaKey) {\n        navigate(makeUrl(`/node/${node.id}/`))\n      } else {\n        toggleExpand()\n      }\n    }\n\n    const [, drop] = useDrop({\n      accept: 'Node' + parentNode.id,\n\n      hover(item: DragItem, monitor) {\n        if (!listItemRef.current) {\n          return\n        }\n\n        const dragIndex = item.index\n        const hoverIndex = index\n\n        if (dragIndex === hoverIndex) {\n          return\n        }\n\n        const hoverBoundingRect = listItemRef.current?.getBoundingClientRect()\n        const hoverMiddleY = hoverBoundingRect.height / 2\n\n        const clientOffset = monitor.getClientOffset()\n        const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top\n\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n          return\n        }\n\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n          return\n        }\n\n        item.index = hoverIndex\n        moveItem(item, dragIndex, hoverIndex)\n      },\n    })\n\n    const [{ isDragging }, drag] = useDrag({\n      canDrag: () => (isEditing ? false : true),\n\n      item: {\n        type: 'Node' + parentNode.id,\n        path: `${parentNode.id}/${node.id}`,\n        parentNode: parentNode,\n        childNode: node,\n        index,\n      },\n\n      collect: monitor => ({\n        isDragging: monitor.isDragging(),\n      }),\n    })\n\n    const handleItemClick = (e: React.MouseEvent): void => {\n      e.preventDefault()\n\n      if (isEditing) {\n        return\n      }\n\n      if (e.altKey) {\n        graph.setActiveMode('edit')\n        setIsEditing(true)\n      } else if (e.shiftKey) {\n        setIsEditing(false)\n        graph.setActiveMode('select')\n        graph.toggleSelectNode(node, parentNode)\n      } else if (e.metaKey) {\n        navigate(makeUrl(`/node/${node.id}/`))\n      } else if (modes.includes('select')) {\n        graph.toggleSelectNode(node, parentNode)\n      } else if (modes.includes('edit')) {\n        setIsEditing(true)\n      } else {\n        navigate(makeUrl(`/node/${node.id}/`))\n      }\n    }\n\n    drag(drop(listItemRef))\n\n    let primaryText = node.id\n    let secondaryText\n\n    const rawContent = node.content?.toJSON?.()\n\n    if (typeof node.content === 'string') {\n      const newlineIndex = node.content.indexOf('\\n')\n\n      primaryText =\n        newlineIndex > 0 ? node.content.slice(0, newlineIndex) : node.content\n      secondaryText =\n        newlineIndex > 0 ? node.content.slice(newlineIndex + 1) : undefined\n    } else if (rawContent) {\n      primaryText = rawContent.blocks[0].text\n      secondaryText = rawContent.blocks[1]?.text\n    }\n\n    return (\n      <>\n        <ListItem\n          ref={listItemRef}\n          onClick={handleItemClick}\n          selected={isSelected}\n          className={classes.listItem}\n          ContainerProps={{\n            onContextMenu,\n            className: [\n              classes.listItemContainer,\n              isExpanded ? 'isExpanded' : '',\n              isDragging ? 'isDragging' : '',\n              isEditing ? 'isEditing' : '',\n              className,\n            ].join(' '),\n          }}\n        >\n          {isEditing && (\n            <NoteEditor\n              autoFocus\n              text={rawContent ? undefined : node.content}\n              rawContent={rawContent}\n              className={classes.noteEditor}\n              inputClassName={classes.noteEditorInput}\n              onValue={value => {\n                setIsEditing(false)\n                if (value) {\n                  if (typeof value === 'string') {\n                    node.setContent(value)\n                  } else if (Object.keys(value).includes('blocks')) {\n                    node.setContent(value)\n                  }\n                }\n              }}\n              onEscape={() => {\n                setIsEditing(false)\n                graph.unsetActiveMode('edit')\n              }}\n            />\n          )}\n\n          <ListItemText\n            primary={primaryText}\n            secondary={secondaryText}\n            className={[\n              classes.itemText,\n              expandSecondaryTypography ? 'expand' : '',\n            ].join(' ')}\n          />\n\n          <ListItemSecondaryAction\n            className={[\n              classes.secondaryActions,\n              node.childCount > 0 ? 'hasChild' : '',\n            ].join(' ')}\n          >\n            {\n              <Button\n                size=\"small\"\n                onClick={handleArrowClick}\n                className={classes.edgeArrow}\n                endIcon={\n                  isExpanded ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />\n                }\n              >\n                {node.childCount > 0 && node.childCount}\n              </Button>\n            }\n          </ListItemSecondaryAction>\n        </ListItem>\n\n        {node.childCount > 0 && (\n          <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\n            <EdgeList\n              node={node}\n              edgeTag=\"child\"\n              className={classes.childList}\n            />\n          </Collapse>\n        )}\n      </>\n    )\n  },\n)\n\nNodeListItem.defaultProps = {\n  expandSecondaryTypography: true,\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { List } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { IAnyModelType, Instance } from 'mobx-state-tree'\n\nimport { useGraph } from 'graph'\nimport { NodeListItem } from './NodeListItem'\nimport { Node } from '../models/Node'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {\n      padding: 0,\n\n      '&.outer': {\n        borderBottom: `.1px solid ${theme.palette.divider}`,\n\n        '& > li:first-child': {\n          border: 0,\n        },\n      },\n    },\n  }),\n)\n\ninterface EdgeListProps {\n  node: Instance<IAnyModelType>\n  edgeTag: string\n  outer?: boolean\n  className?: string\n}\n\ninterface DragItem {\n  type: string\n  index: number\n  path: string\n  parentNode: Instance<typeof Node>\n  childNode: Instance<typeof Node>\n}\n\nexport const EdgeList: React.FunctionComponent<EdgeListProps> = observer(\n  ({ node, edgeTag, outer, className }) => {\n    const classes = useStyles()\n    const edges = node.edgeMap.get(edgeTag)\n    const graph = useGraph()\n    const modes = graph.activeModes\n\n    /* const [hasAnchor, setHasAnchor] = React.useState(true) */\n\n    /* React.useEffect(() => { */\n    /*   if (hasAnchor) { */\n    /*     window.scroll({ top: document.body.scrollHeight, behavior: 'smooth' }) */\n    /*   } */\n    /* }, [hasAnchor]) */\n\n    const moveItem = React.useCallback(\n      (item: DragItem, dragIndex: number, hoverIndex: number): void => {\n        item.parentNode.reorderEdge(\n          'child',\n          item.childNode,\n          hoverIndex,\n          dragIndex,\n        )\n      },\n      [],\n    )\n\n    return edges?.length ? (\n      <List\n        aria-label=\"edge list\"\n        className={[\n          classes.list,\n          outer ? 'outer' : null,\n          outer && modes.includes('edit') ? 'editMode' : null,\n          outer && modes.includes('select') ? 'selectMode' : null,\n          className,\n        ].join(' ')}\n      >\n        {edges.map((item: Instance<typeof Node>, index: number) => (\n          <NodeListItem\n            key={`${node.id}-${edgeTag}-${item.id}`}\n            index={index}\n            node={item}\n            parentNode={node}\n            moveItem={moveItem}\n          />\n        ))}\n      </List>\n    ) : null\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { InputBase, ClickAwayListener } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'inline-block',\n      margin: 0,\n      padding: theme.spacing(1, 2, 1, 2),\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      ...theme.typography.body1,\n    },\n  }),\n)\n\ninterface LabelEditorProps {\n  content?: string\n  placeholder?: string\n  autoFocus?: boolean\n  className?: string\n  onValue?: (\n    value: string,\n    event?: React.KeyboardEvent<HTMLInputElement>,\n  ) => void\n}\n\nexport const LabelEditor: React.FunctionComponent<LabelEditorProps> = ({\n  content,\n  placeholder,\n  autoFocus,\n  className,\n  onValue,\n}) => {\n  const inputRef = React.useRef<HTMLInputElement>()\n  const classes = useStyles()\n  const [inputValue, setInputValue] = React.useState(content ?? '')\n\n  const [didRender, setDidRender] = React.useState(false)\n  React.useEffect(() => {\n    if (!didRender) {\n      inputRef.current?.setSelectionRange(inputValue.length, inputValue.length)\n      setDidRender(true)\n    }\n  }, [didRender, inputValue.length])\n\n  const handleValue = (event?: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (onValue) {\n      setInputValue('')\n      onValue(inputValue, event)\n    }\n  }\n\n  const handleClickAway = (event: React.MouseEvent<Document>): void => {\n    // TODO don't do a create when clicking away\n    // but this is how it should work when editing an existing record\n    // so back to a create mode? D:\n    if (inputValue === '') {\n      handleValue()\n    }\n  }\n\n  const handleKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n  ): void => {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      event.preventDefault()\n      handleValue(event)\n    } else if (event.keyCode === 27) {\n      // TODO escape should also exit the editor, but this is ugly to try here\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setInputValue(event.target.value)\n  }\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <InputBase\n        fullWidth\n        multiline\n        autoFocus={autoFocus}\n        inputRef={inputRef}\n        placeholder={placeholder}\n        value={inputValue}\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        inputProps={{ 'aria-label': 'text' }}\n        className={[classes.root, className].join(' ')}\n      />\n    </ClickAwayListener>\n  )\n}\n\nLabelEditor.defaultProps = {\n  placeholder: 'Text',\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { observer } from 'mobx-react-lite'\nimport {\n  IconButton,\n  ClickAwayListener,\n  Paper,\n  Popper,\n  MenuItem,\n  MenuList,\n  IconButtonProps,\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined'\nimport FlipToBackIcon from '@material-ui/icons/FlipToBackOutlined'\nimport CancelIcon from '@material-ui/icons/CancelOutlined'\nimport FolderIcon from '@material-ui/icons/FolderOutlined'\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined'\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownloadOutlined'\nimport SelectAllIcon from '@material-ui/icons/SelectAll'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { useGraph, Node, useActive } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'inherit',\n      position: 'relative',\n    },\n\n    buttonGroup: {\n      '& .MuiButtonGroup-groupedTextHorizontal': {\n        borderRight: 'unset',\n      },\n      '& .MuiButtonGroup-grouped': {\n        minWidth: 'unset',\n      },\n    },\n\n    selectCount: {\n      color: theme.palette.primary.main,\n      fontSize: 12,\n      position: 'absolute',\n      right: -theme.spacing(1),\n    },\n\n    selectButton: {},\n\n    deleteButton: {\n      color: theme.palette.error.main,\n    },\n\n    popper: {\n      '& svg': {\n        marginRight: theme.spacing(1),\n      },\n    },\n\n    paper: {\n      border: `.1px solid ${theme.palette.divider}`,\n    },\n\n    selectMenu: {\n      outline: 0,\n    },\n  }),\n)\n\ninterface SelectButtonProps extends IconButtonProps {\n  node: Instance<typeof Node>\n  onClick: React.MouseEventHandler\n  className?: string\n}\n\nexport const SelectButton: React.FunctionComponent<SelectButtonProps> = observer(\n  ({ node, className, onClick, ...extraProps }) => {\n    const graph = useGraph()\n    const active = useActive()\n    const classes = useStyles()\n    const anchorRef = React.useRef<HTMLButtonElement>(null)\n\n    const selectedCount = graph.selectedNodeCount\n\n    const [open, setOpen] = React.useState(false)\n    const [showAltMenu, setShowAltMenu] = React.useState(false)\n\n    React.useEffect(() => {\n      const downHandler = (event: KeyboardEvent): void => {\n        if (event.key === 'Alt') {\n          setShowAltMenu(true)\n        }\n      }\n\n      const upHandler = (event: KeyboardEvent): void => {\n        if (event.key === 'Alt') {\n          setShowAltMenu(false)\n        }\n      }\n\n      document.addEventListener('keydown', downHandler)\n      document.addEventListener('keyup', upHandler)\n\n      return () => {\n        document.removeEventListener('keydown', downHandler)\n        document.removeEventListener('keyup', upHandler)\n      }\n    })\n\n    return (\n      <div className={[classes.root, className].join(' ')}>\n        {selectedCount > 0 && (\n          <span className={classes.selectCount}>{selectedCount}</span>\n        )}\n\n        <IconButton\n          color=\"primary\"\n          ref={anchorRef}\n          onClick={\n            graph.selectedNodes.size ? () => setOpen(value => !value) : onClick\n          }\n          className={classes.selectButton}\n          {...extraProps}\n        >\n          <SelectAllIcon />\n        </IconButton>\n\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          disablePortal\n          className={classes.popper}\n        >\n          {({ placement }) => (\n            <ClickAwayListener\n              onClickAway={e => {\n                e.preventDefault()\n                setOpen(false)\n              }}\n            >\n              <Paper elevation={0} className={classes.paper}>\n                <MenuList dense className={classes.selectMenu}>\n                  <MenuItem\n                    divider\n                    onClick={() => {\n                      graph.removeSelectedNodes()\n                      setOpen(false)\n                    }}\n                    className={classes.deleteButton}\n                  >\n                    <DeleteIcon />\n                    Remove\n                  </MenuItem>\n\n                  {showAltMenu ? (\n                    <MenuItem\n                      onClick={() => {\n                        graph.linkSelectedNodes(active)\n                        setOpen(false)\n                      }}\n                    >\n                      <FlipToBackIcon />\n                      Link here\n                    </MenuItem>\n                  ) : (\n                    <MenuItem\n                      disabled\n                      onClick={() => {\n                        setOpen(false)\n                      }}\n                    >\n                      <FileCopyIcon />\n                      Copy here\n                    </MenuItem>\n                  )}\n\n                  <MenuItem\n                    divider\n                    onClick={() => {\n                      graph.moveSelectedNodes(active)\n                      setOpen(false)\n                    }}\n                  >\n                    <FolderIcon />\n                    Move here\n                  </MenuItem>\n\n                  {/* <MenuItem */}\n                  {/*   onClick={() => { */}\n                  {/*     graph.deleteSelectedNodes() */}\n                  {/*     setOpen(false) */}\n                  {/*   }} */}\n                  {/*   className={classes.deleteButton} */}\n                  {/* > */}\n                  {/*   <DeleteIcon /> */}\n                  {/*   Delete */}\n                  {/* </MenuItem> */}\n\n                  <MenuItem\n                    divider\n                    onClick={() => {\n                      console.log(graph.exportSelectedNodes())\n                      setOpen(false)\n                    }}\n                  >\n                    <CloudDownloadIcon />\n                    Export\n                  </MenuItem>\n\n                  <MenuItem\n                    onClick={() => {\n                      graph.clearSelectedNodes()\n                      setOpen(false)\n                    }}\n                  >\n                    <CancelIcon />\n                    Clear selection\n                  </MenuItem>\n                </MenuList>\n              </Paper>\n            </ClickAwayListener>\n          )}\n        </Popper>\n      </div>\n    )\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport {\n  Toolbar,\n  IconButton,\n  Box,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n  emphasize,\n  fade,\n} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SearchIcon from '@material-ui/icons/Search'\nimport TuneIcon from '@material-ui/icons/Tune'\nimport GroupIcon from '@material-ui/icons/Group'\nimport { Instance } from 'mobx-state-tree'\n\nimport { SelectButton } from 'select'\nimport { Node, useGraph } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n\n    toolbar: {\n      justifyContent: 'space-evenly',\n      [theme.breakpoints.up('sm')]: {\n        justifyContent: 'center',\n      },\n\n      minHeight: theme.spacing(8),\n\n      backdropFilter: 'blur(3px)',\n      background: `\n        linear-gradient(\n          to bottom,\n          ${fade(theme.palette.background.default, 0.9)},\n          ${fade(theme.palette.background.default, 1)} 80%\n        )`,\n    },\n\n    insertButton: {\n      color: theme.palette.background.default,\n      boxShadow: 'unset',\n      margin: theme.spacing(0, 1, 0, 1),\n      background: `\n        radial-gradient(\n          circle at bottom,\n          ${theme.palette.secondary.main},\n          ${theme.palette.primary.main} 75%\n        )`,\n\n      '&:hover, &:focus': {\n        boxShadow: 'unset',\n        background: `\n        radial-gradient(\n          circle at bottom,\n          ${emphasize(theme.palette.secondary.main, 0.3)},\n          ${theme.palette.primary.main} 75%\n        )`,\n      },\n\n      '&:active': {\n        boxShadow: 'unset',\n        background: `\n        radial-gradient(\n          circle at bottom,\n          ${emphasize(theme.palette.secondary.main, 0.3)},\n          ${theme.palette.primary.main} 75%\n        )`,\n      },\n    },\n  }),\n)\n\ninterface NodeActionsProps {\n  node: Instance<typeof Node>\n  className?: string\n}\n\nexport const NodeActions: React.FunctionComponent<NodeActionsProps> = observer(\n  ({ node, className }) => {\n    const classes = useStyles()\n    const graph = useGraph()\n    const hasChildren = node.childCount > 0\n    const selectedCount = graph.selectedNodes.size ?? 0\n\n    return (\n      <Box className={[classes.root, className].join(' ')}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            disabled\n            color={graph.activeModes.includes('edit') ? 'primary' : undefined}\n            onClick={() => graph.toggleActiveMode('edit')}\n          >\n            <SearchIcon />\n          </IconButton>\n\n          <IconButton\n            disabled={!hasChildren}\n            color={graph.activeModes.includes('edit') ? 'primary' : undefined}\n            onClick={() => graph.toggleActiveMode('edit')}\n          >\n            <EditIcon />\n          </IconButton>\n\n          <IconButton\n            color=\"primary\"\n            onClick={() => {\n              graph.setActiveMode('insert')\n            }}\n            className={classes.insertButton}\n          >\n            <AddIcon />\n          </IconButton>\n\n          <SelectButton\n            disabled={!(hasChildren || selectedCount > 0)}\n            node={node}\n            color={graph.activeModes.includes('select') ? 'primary' : undefined}\n            onClick={() => {\n              graph.toggleActiveMode('select')\n            }}\n          />\n\n          <IconButton\n            disabled\n            color={graph.activeModes.includes('edit') ? 'primary' : undefined}\n            onClick={() => graph.toggleActiveMode('edit')}\n          >\n            <TuneIcon />\n          </IconButton>\n\n          {false && (\n            <Button\n              disabled\n              startIcon={<GroupIcon />}\n              onClick={() => {\n                if (graph.activeModes.includes('share')) {\n                  graph.closePeerConnection()\n                } else {\n                  graph.offerPeerConnection(node)\n                }\n              }}\n              color={\n                graph.activeModes.includes('share') ? 'primary' : undefined\n              }\n            >\n              share\n            </Button>\n          )}\n        </Toolbar>\n      </Box>\n    )\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { AppBar, Box, fade } from '@material-ui/core'\nimport { Instance } from 'mobx-state-tree'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { useNavigate } from '@reach/router'\n\nimport { makeUrl } from 'route'\nimport { TitleBar } from 'common'\nimport { NoteEditor } from 'note'\n\nimport { Node, useGraph, NodeActions } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: 'center',\n      position: 'relative',\n      paddingBottom: theme.spacing(8),\n    },\n\n    appBar: {\n      position: 'sticky',\n      borderBottom: `.1px solid ${theme.palette.divider}`,\n      backdropFilter: 'blur(3px)',\n      background: `\n        linear-gradient(\n          to top,\n          ${fade(theme.palette.background.default, 0.9)},\n          ${fade(theme.palette.background.default, 1)} 80%\n        )`,\n    },\n\n    titleBar: {\n      background: 'unset',\n    },\n\n    children: {\n      marginBottom: '-0.1px',\n    },\n\n    textEditor: {\n      position: 'sticky',\n      zIndex: theme.zIndex.appBar + 1,\n      bottom: theme.spacing(8),\n    },\n\n    actions: {\n      borderTop: `.1px solid ${theme.palette.divider}`,\n      zIndex: theme.zIndex.appBar,\n\n      position: 'fixed',\n      bottom: 0,\n      left: '50%',\n      width: '100%',\n      transform: 'translateX(-50%)',\n\n      [theme.breakpoints.up('sm')]: {\n        maxWidth: '900px',\n      },\n    },\n  }),\n)\n\ninterface LayoutProps {\n  node: Instance<typeof Node>\n  className?: string\n}\n\nexport const NodeLayout: React.FunctionComponent<LayoutProps> = observer(\n  ({ node, className, children }) => {\n    const classes = useStyles()\n    const navigate = useNavigate()\n    const graph = useGraph()\n\n    const content = node.content?.toJSON?.()\n    let titleText: string\n\n    if (typeof node.content === 'string') {\n      titleText = node.content\n    } else if (content) {\n      titleText = content.blocks?.[0]?.text\n    } else {\n      titleText = node.id\n    }\n\n    return (\n      <Box className={[classes.root, className].join(' ')}>\n        <AppBar elevation={0} className={classes.appBar}>\n          <TitleBar title={titleText} className={classes.titleBar} />\n        </AppBar>\n\n        <Box\n          className={[\n            classes.children,\n            graph.activeModes.includes('insert') ? 'fade' : '',\n          ].join(' ')}\n        >\n          {children}\n        </Box>\n\n        {graph.activeModes.includes('insert') && (\n          <NoteEditor\n            autoFocus\n            className={classes.textEditor}\n            onValue={(value, event) => {\n              if (value) {\n                const child = graph.createChild(node, { content: value })\n\n                if (event?.ctrlKey) {\n                  navigate(makeUrl(`/node/${child.id}/`))\n                } else {\n                  return true\n                }\n              } else {\n                graph.toggleActiveMode('insert')\n              }\n            }}\n            onEscape={() => {\n              graph.unsetActiveMode('insert')\n            }}\n          />\n        )}\n\n        <NodeActions\n          node={node}\n          className={[\n            classes.actions,\n            graph.activeModes.includes('insert') ? 'fade' : '',\n          ].join(' ')}\n        />\n      </Box>\n    )\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { NodeLayout, EdgeList, useGraph, ActiveProvider } from 'graph'\n\ninterface NodeViewerProps {\n  id?: string\n}\n\nexport const NodeViewer: React.FunctionComponent<NodeViewerProps> = observer(\n  ({ id }) => {\n    const graph = useGraph()\n    const lookup = graph.Node.get(id)\n    const node = lookup ?? graph.rootNode\n\n    return node ? (\n      <DndProvider backend={HTML5Backend}>\n        <ActiveProvider value={node}>\n          <NodeLayout node={node}>\n            <EdgeList node={node} edgeTag=\"child\" outer />\n          </NodeLayout>\n        </ActiveProvider>\n      </DndProvider>\n    ) : null\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\n\nimport { Graph } from 'graph'\n\nimport { Store } from './models/Store'\n\nconst store = Store.create({\n  graph: Graph.create(),\n})\n\nexport const storeContext = React.createContext<Instance<typeof Store>>(store)\n\nexport const StoreProvider: React.FunctionComponent = ({ children }) =>\n  React.createElement(storeContext.Provider, { value: store }, children)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { observer } from 'mobx-react-lite'\nimport {\n  IconButton,\n  ClickAwayListener,\n  Paper,\n  Popper,\n  MenuItem,\n  Menu,\n  MenuList,\n  IconButtonProps,\n  Typography,\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined'\nimport FlipToBackIcon from '@material-ui/icons/FlipToBackOutlined'\nimport CancelIcon from '@material-ui/icons/CancelOutlined'\nimport FolderIcon from '@material-ui/icons/FolderOutlined'\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined'\nimport SelectAllIcon from '@material-ui/icons/SelectAll'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { useGraph, Node, useActive } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'inherit',\n      position: 'relative',\n    },\n    buttonGroup: {\n      '& .MuiButtonGroup-groupedTextHorizontal': {\n        borderRight: 'unset',\n      },\n      '& .MuiButtonGroup-grouped': {\n        minWidth: 'unset',\n      },\n    },\n    selectCount: {\n      color: theme.palette.primary.main,\n      fontSize: 12,\n      position: 'absolute',\n      right: -theme.spacing(1),\n    },\n    selectButton: {},\n    deleteButton: {\n      color: theme.palette.error.main,\n    },\n    popper: {\n      '& svg': {\n        marginRight: theme.spacing(1),\n      },\n    },\n    paper: {\n      border: `.1px solid ${theme.palette.divider}`,\n    },\n    selectMenu: {\n      outline: 0,\n    },\n  }),\n)\n\nconst initialState = {\n  mouseX: null,\n  mouseY: null,\n}\n\ninterface NodeContextMenuProps {\n  node: Instance<typeof Node>\n  targetRef: React.RefObject<HTMLElement>\n}\n\n/* export type NodeContextMenu<T> = React.FunctionComponent<NodeContextMenuProps<T>> */\n\nexport const NodeContextMenu: React.FunctionComponent<NodeContextMenuProps> = ({\n  node,\n  targetRef,\n}) => {\n  const [state, setState] = React.useState<{\n    mouseX: null | number\n    mouseY: null | number\n  }>(initialState)\n\n  const handleActivate: React.MouseEventHandler<React.ReactElement> = event => {\n    event.preventDefault()\n    setState({\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n    })\n  }\n\n  const handleClose = (): void => {\n    setState(initialState)\n  }\n\n  /* React.useEffect(() => { */\n  /*   targetRef.current?.addEventListener('contextmenu', handleActivate) */\n  /*   return () => { */\n  /*     targetRef.current?.removeEventListener('contextmenu', handleActivate) */\n  /*   } */\n  /* }, [targetRef]) */\n\n  return (\n    <Menu\n      keepMounted\n      open={state.mouseY !== null}\n      onClose={handleClose}\n      anchorReference=\"anchorPosition\"\n      anchorPosition={\n        state.mouseY !== null && state.mouseX !== null\n          ? { top: state.mouseY, left: state.mouseX }\n          : undefined\n      }\n    >\n      <MenuItem onClick={handleClose}>Copy</MenuItem>\n      <MenuItem onClick={handleClose}>Print</MenuItem>\n      <MenuItem onClick={handleClose}>Highlight</MenuItem>\n      <MenuItem onClick={handleClose}>Email</MenuItem>\n    </Menu>\n  )\n}\n\n/* interface NodeContextMenuProps extends IconButtonProps { */\n/*   node: Instance<typeof Node> */\n/*   onClick: React.MouseEventHandler */\n/*   className?: string */\n/* } */\n\n/* export const NodeContextMenu: React.FunctionComponent<NodeContextMenuProps> = observer( */\n/*   ({ node, className, onClick, ...extraProps }) => { */\n/*     const classes = useStyles() */\n/*     const [open, setOpen] = React.useState(false) */\n/*     const anchorRef = React.useRef<HTMLButtonElement>(null) */\n/*     const active = useActive() */\n/*     const [showAltMenu, setShowAltMenu] = React.useState(false) */\n\n/*     React.useEffect(() => { */\n/*       const downHandler = (event: KeyboardEvent): void => { */\n/*         if (event.key === 'Alt') { */\n/*           setShowAltMenu(true) */\n/*         } */\n/*       } */\n\n/*       const upHandler = (event: KeyboardEvent): void => { */\n/*         if (event.key === 'Alt') { */\n/*           setShowAltMenu(false) */\n/*         } */\n/*       } */\n\n/*       document.addEventListener('keydown', downHandler) */\n/*       document.addEventListener('keyup', upHandler) */\n\n/*       return () => { */\n/*         document.removeEventListener('keydown', downHandler) */\n/*         document.removeEventListener('keyup', upHandler) */\n/*       } */\n/*     }) */\n\n/*     const graph = useGraph() */\n\n/*     const selectedCount = graph.selectedNodeCount */\n/*     return ( */\n/*       <div className={[classes.root, className].join(' ')}> */\n/*         {selectedCount > 0 && ( */\n/*           <span className={classes.selectCount}>{selectedCount}</span> */\n/*         )} */\n/*         <IconButton */\n/*           color=\"primary\" */\n/*           ref={anchorRef} */\n/*           onClick={ */\n/*             graph.selectedNodes.size ? () => setOpen(value => !value) : onClick */\n/*           } */\n/*           className={classes.selectButton} */\n/*           {...extraProps} */\n/*         > */\n/*           <SelectAllIcon /> */\n/*         </IconButton> */\n/*         <Popper */\n/*           open={open} */\n/*           anchorEl={anchorRef.current} */\n/*           role={undefined} */\n/*           disablePortal */\n/*           className={classes.popper} */\n/*         > */\n/*           {({ placement }) => ( */\n/*             <ClickAwayListener */\n/*               onClickAway={e => { */\n/*                 e.preventDefault() */\n/*                 setOpen(false) */\n/*               }} */\n/*             > */\n/*               <Paper elevation={0} className={classes.paper}> */\n/*                 <MenuList dense className={classes.selectMenu}> */\n/*                   <MenuItem */\n/*                     divider */\n/*                     onClick={() => { */\n/*                       graph.removeSelectedNodes() */\n/*                       setOpen(false) */\n/*                     }} */\n/*                     className={classes.deleteButton} */\n/*                   > */\n/*                     <DeleteIcon /> */\n/*                     Remove */\n/*                   </MenuItem> */\n\n/*                   {showAltMenu ? ( */\n/*                     <MenuItem */\n/*                       onClick={() => { */\n/*                         graph.linkSelectedNodes(active) */\n/*                         setOpen(false) */\n/*                       }} */\n/*                     > */\n/*                       <FlipToBackIcon /> */\n/*                       Link here */\n/*                     </MenuItem> */\n/*                   ) : ( */\n/*                     <MenuItem */\n/*                       disabled */\n/*                       onClick={() => { */\n/*                         setOpen(false) */\n/*                       }} */\n/*                     > */\n/*                       <FileCopyIcon /> */\n/*                       Copy here */\n/*                     </MenuItem> */\n/*                   )} */\n\n/*                   <MenuItem */\n/*                     divider */\n/*                     onClick={() => { */\n/*                       graph.moveSelectedNodes(active) */\n/*                       setOpen(false) */\n/*                     }} */\n/*                   > */\n/*                     <FolderIcon /> */\n/*                     Move here */\n/*                   </MenuItem> */\n\n/*                   {/1* <MenuItem *1/} */\n/*                   {/1*   onClick={() => { *1/} */\n/*                   {/1*     graph.deleteSelectedNodes() *1/} */\n/*                   {/1*     setOpen(false) *1/} */\n/*                   {/1*   }} *1/} */\n/*                   {/1*   className={classes.deleteButton} *1/} */\n/*                   {/1* > *1/} */\n/*                   {/1*   <DeleteIcon /> *1/} */\n/*                   {/1*   Delete *1/} */\n/*                   {/1* </MenuItem> *1/} */\n\n/*                   <MenuItem */\n/*                     onClick={() => { */\n/*                       graph.clearSelectedNodes() */\n/*                       setOpen(false) */\n/*                     }} */\n/*                   > */\n/*                     <CancelIcon /> */\n/*                     Clear selection */\n/*                   </MenuItem> */\n/*                 </MenuList> */\n/*               </Paper> */\n/*             </ClickAwayListener> */\n/*           )} */\n/*         </Popper> */\n/*       </div> */\n/*     ) */\n/*   }, */\n/* ) */\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types } from 'mobx-state-tree'\n\nimport { Graph } from 'graph'\n\nexport const Store = types\n  .model('Store', {\n    graph: Graph,\n    location: types.optional(types.string, '/'),\n  })\n  .actions(self => ({\n    setLocation(path: string) {\n      self.location = path\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\n\nimport { Store, storeContext } from 'store'\n\nexport function useStore(): Instance<typeof Store> {\n  const store = React.useContext(storeContext)\n  if (store) {\n    return store\n  } else {\n    throw Error('Cannot use store before setup')\n  }\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\n\nimport { NodeLayout, EdgeList } from 'graph'\n\nimport { useStore } from 'store'\n\ninterface InstanceViewerProps {\n  id?: string\n  type?: string\n}\n\nexport const InstanceViewer: React.FunctionComponent<InstanceViewerProps> = observer(\n  ({ id, type }) => {\n    const store = useStore()\n    const node = store.graph.Node.get(id)\n    let instance = store.graph.rootNode\n\n    if (node) {\n      instance = node\n    }\n\n    return instance ? (\n      <NodeLayout node={instance}>\n        <EdgeList node={instance} edgeTag=\"child\" />\n      </NodeLayout>\n    ) : null\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { List, ListItem, ListItemText } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { getMembers, Instance, isStateTreeNode } from 'mobx-state-tree'\n\nimport { useGraph, Node } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    item: {},\n    itemText: {},\n  }),\n)\n\ninterface PropertyEditorProps {\n  node?: Instance<typeof Node> | string\n  propName?: string\n  minimal?: boolean\n}\n\nexport const PropertyEditor: React.FunctionComponent<PropertyEditorProps> = observer(\n  props => {\n    const classes = useStyles()\n    const graph = useGraph()\n    let node = props.node\n\n    if (typeof node === 'string') {\n      node = graph.Node.get(props.node)\n    }\n\n    if (!isStateTreeNode(node)) {\n      return <></> // Loading\n    }\n\n    const members = getMembers(node)\n    const properties = Object.keys(members.properties)\n\n    const handleSubmit: React.EventHandler<React.SyntheticEvent> = () => {\n      console.log('submit')\n    }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <List className={classes.root}>\n          {properties.map(value => (\n            <ListItem dense button key={value} className={classes.item}>\n              <ListItemText\n                primary={value}\n                id={`list-content-${value}`}\n                className={classes.itemText}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </form>\n    )\n  },\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  // https://github.com/mui-org/material-ui/issues/13394\n  // TODO Remove when Material UI v5 is out.\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n  fade,\n} from '@material-ui/core/styles'\nimport { useMediaQuery, CssBaseline, PaletteType } from '@material-ui/core'\n\nexport const useDarkMode = (): ReturnType<typeof useMediaQuery> =>\n  useMediaQuery('(prefers-color-scheme: dark)')\n\nexport const ThemeProvider: React.FunctionComponent = ({ children }) => {\n  const prefersDarkMode = useDarkMode()\n\n  const theme: ReturnType<typeof createMuiTheme> = React.useMemo(() => {\n    const palette = {\n      type: (prefersDarkMode ? 'dark' : 'light') as PaletteType,\n\n      primary: { main: '#FF2EA2' },\n      secondary: { main: '#FF8F00' },\n\n      divider: prefersDarkMode ? '#222222' : '#e0e0e0',\n\n      background: {\n        default: prefersDarkMode ? '#000000' : '#ffffff',\n        paper: prefersDarkMode ? '#141414' : '#fbfbfb',\n      },\n\n      text: {\n        primary: prefersDarkMode ? '#dddddd' : '#212121',\n        secondary: prefersDarkMode ? '#aaaaaa' : '#595959',\n      },\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      palette.primary.main = '#718C00'\n      palette.secondary.main = '#fd971f'\n    }\n\n    return createMuiTheme({\n      palette,\n\n      // TODO use responsiveFontSizes\n      typography: {\n        fontSize: 16,\n\n        fontFamily: [\n          '-apple-system',\n          'system-ui',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n        ].join(', '),\n      },\n\n      shape: {\n        borderRadius: 6,\n      },\n\n      props: {\n        MuiButton: {\n          disableElevation: true,\n        },\n\n        MuiButtonGroup: {\n          disableElevation: true,\n        },\n      },\n\n      overrides: {\n        MuiButtonBase: {\n          root: {\n            cursor: 'default',\n          },\n        },\n\n        MuiCssBaseline: {\n          '@global': {\n            '*::selection': {\n              backgroundColor: fade(\n                palette.text.primary,\n                prefersDarkMode ? 0.4 : 0.2,\n              ),\n            },\n\n            html: {\n              userSelect: 'none',\n              overscrollBehavior: 'none',\n              '-webkit-touch-callout': 'none',\n\n              height: '100%',\n              margin: 'auto',\n              maxWidth: '900px',\n            },\n\n            body: {\n              height: '100%',\n            },\n          },\n        },\n      },\n    })\n  }, [prefersDarkMode])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MuiThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable no-console */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n\n        if (installingWorker == null) {\n          return\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'mobx-react-lite/batchingForReactDom'\n\nimport { StoreProvider } from './store'\nimport { ThemeProvider } from './theme'\nimport { Router } from './route'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <ThemeProvider>\n        <Router />\n      </ThemeProvider>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}