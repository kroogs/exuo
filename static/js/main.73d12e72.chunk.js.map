{"version":3,"sources":["peer/PeerConnector.tsx","graph/useGraph.ts","graph/models/factories.ts","note/Note.ts","note/NoteEditor.tsx","graph/models/Node.ts","graph/models/Graph.ts","graph/views/EdgeList.tsx","graph/views/LabelEditor.tsx","select/SelectionActions.tsx","graph/views/NodeActions.tsx","graph/views/NodeLayout.tsx","graph/views/NodeListItem.tsx","graph/views/NodeViewer.tsx","peer/index.ts","route.tsx","common/Layout.tsx","common/Unknown.ts","common/TitleBar.tsx","common/utils.tsx","theme.tsx","serviceWorker.ts","index.tsx","store/StoreProvider.tsx","store/views/PropertyEditor.tsx","store/Store.ts","store/useStore.ts","store/persist.ts","config/Config.ts","config/Settings.tsx"],"names":["PeerConnector","id","React","useState","peerError","setPeerError","hasAccepted","setHasAccepted","navigate","useNavigate","useGraph","graph","align","mt","textAlign","color","disabled","onClick","seekPeerConnection","then","instance","makeUrl","catch","error","size","selector","useStore","store","edgeMapFactory","getEdgeType","types","model","edgeMap","map","array","safeReference","late","acceptsUndefined","actions","self","hasEdge","tag","target","Boolean","get","includes","length","addEdge","has","set","push","removeEdge","remove","Error","views","getEdgeTag","nodeFactory","models","compose","identifier","concat","named","graphFactory","nodeModels","options","Object","fromEntries","keys","key","isModelType","isIdentifierType","properties","createNode","modelName","props","node","create","getId","uuid","put","NodeBase","Node","Note","body","string","setBody","content","makeStyles","theme","createStyles","root","input","height","padding","spacing","toolbar","Config","BaseConfig","BaseNote","union","label","optional","setLabel","events","date","Graph","setActiveMode","mode","activeModes","unsetActiveMode","toggleActiveMode","clearSelectedNodes","clear","deleteSelectedNodes","forEach","delete","selectedNodes","toggleSelectNode","selectAllChildNodes","child","console","log","afterCreate","persist","items","rootNodeId","global","dividers","lists","checkbox","showChildCount","showEdgeChips","createChild","edgeProps","edgeType","deleteNode","toggleGlobalDividerSetting","value","toggleListCheckboxSetting","config","useStyles","list","EdgeList","edgeTag","classes","className","List","aria-label","slice","reverse","item","width","fontSize","inputBase","lineHeight","LabelEditor","placeholder","createMode","onValue","inputValue","setInputValue","handleValue","event","preventDefault","undefined","onSubmit","onBlur","join","InputBase","autoFocus","inputProps","onChange","fullWidth","defaultProps","button","palette","action","active","deleteButton","main","SelectionActions","Button","startIcon","justifyContent","labelEditor","NodeActions","setMode","hasChildren","childCount","Toolbar","variant","isRootPath","closePeerConnection","offerPeerConnection","text","secondary","backgroundColor","background","default","children","marginTop","NodeLayout","Box","AppBar","elevation","position","title","listItem","primary","breakpoints","up","borderRadius","shape","itemText","display","margin","overflowX","whiteSpace","textOverflow","typography","body1","listItemSelectCheckbox","listItemIcon","minWidth","editItemText","chip","pointerEvents","hint","cursor","paddingRight","secondaryActions","right","childButton","NodeListItem","isEditing","setIsEditing","isMouseDown","useRef","timer","listConfig","downHandler","e","current","setTimeout","clearTimeout","upHandler","isSelected","ListItem","disableRipple","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","component","Checkbox","checked","tabIndex","edge","ListItemText","primaryTypographyProps","ListItemSecondaryAction","Chip","icon","to","Link","endIcon","NodeViewer","rootNode","path","process","Route","Component","Router","basepath","Settings","appBar","Layout","Unknown","null","boolean","number","backButton","visibility","hide","mouseEvents","settingsButton","flexGrow","TitleBar","showBackButton","showSettingsButton","IconButton","window","history","back","Typography","location","pathname","ThemeProvider","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","fontFamily","type","MuiButton","disableElevation","overrides","MuiCssBaseline","html","userSelect","overscrollBehavior","maxWidth","CssBaseline","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","setLocation","storeContext","createContext","StoreProvider","createElement","Provider","useContext","useObserver","a","db","Dexie","tableNames","getMembers","tableConfig","name","version","stores","Promise","all","table","toArray","rows","r","resolved","applySnapshot","onPatch","patch","split","typeName","propName","op","getSnapshot","propValue","isStateTreeNode","update","t","maybe","subheader","ListSubheader","ListItemIcon","Switch","listCheckboxSetting"],"mappings":"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","file":"static/js/main.73d12e72.chunk.js","sourcesContent":["/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Box, Button, Typography, CircularProgress } from '@material-ui/core'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { useNavigate } from '@reach/router'\n\nimport { Layout } from 'common'\nimport { makeUrl } from 'route'\nimport { useGraph } from 'graph'\n\ninterface PeerConnectorProps {\n  id?: string\n}\n\nexport const PeerConnector: React.FunctionComponent<PeerConnectorProps> = ({\n  id,\n}) => {\n  const [peerError, setPeerError] = React.useState<null | Error>(null)\n  const [hasAccepted, setHasAccepted] = React.useState(false)\n  const navigate = useNavigate()\n\n  return useGraph(graph => {\n    const handleAccept: React.EventHandler<React.SyntheticEvent> = () => {\n      setHasAccepted(true)\n      graph\n        .seekPeerConnection(id)\n        .then((instance: IAnyStateTreeNode) => {\n          navigate(makeUrl(`/node/${instance.id}`))\n        })\n        .catch((error: Error) => {\n          setPeerError(error)\n        })\n    }\n\n    return (\n      <Layout>\n        <Typography align=\"center\">\n          Someone wants to share content with you.\n          <br />\n          Do not accept if you do not trust them.\n        </Typography>\n        <Box mt={1} textAlign=\"center\">\n          {peerError ? (\n            <Typography color=\"error\">{peerError}</Typography>\n          ) : (\n            <Button\n              disabled={hasAccepted}\n              onClick={handleAccept}\n              color=\"primary\"\n            >\n              {hasAccepted ? <CircularProgress size={24} /> : 'Accept'}\n            </Button>\n          )}\n        </Box>\n      </Layout>\n    )\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { Instance } from 'mobx-state-tree'\n\nimport { useStore } from 'store'\n\nimport { Graph } from './models/Graph'\n\nexport const useGraph = <S>(selector: (s: Instance<typeof Graph>) => S): S =>\n  useStore(store => selector(store.graph))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  IAnyModelType,\n  IAnyType,\n  Instance,\n  isIdentifierType,\n  SnapshotIn,\n  isModelType,\n  types,\n} from 'mobx-state-tree'\nimport { v4 as uuid } from 'uuid'\n\nexport type ModelOrUnion = IAnyModelType | IAnyType\nexport type EdgeResolver = () => ModelOrUnion\nexport type ModelTable = Record<string, IAnyModelType>\n\nexport const edgeMapFactory = (getEdgeType: EdgeResolver): IAnyModelType =>\n  types\n    .model('EdgeMap', {\n      edgeMap: types.map(\n        types.array(\n          types.safeReference(types.late(getEdgeType), {\n            acceptsUndefined: false,\n          }),\n        ),\n      ),\n    })\n    .actions(self => ({\n      hasEdge(tag: string, target?: Instance<IAnyModelType>): boolean {\n        if (target) {\n          return Boolean(self.edgeMap.get(tag)?.includes(target))\n        } else {\n          return Boolean(self.edgeMap.get(tag)?.length)\n        }\n      },\n    }))\n    .actions(self => ({\n      addEdge(tag: string, target: Instance<IAnyModelType>): void {\n        if (!self.edgeMap.has(tag)) {\n          self.edgeMap.set(tag, [])\n        }\n\n        self.edgeMap.get(tag)?.push(target)\n      },\n\n      removeEdge(tag: string, target: Instance<IAnyModelType>): void {\n        if (!self.edgeMap.get(tag)?.remove(target)) {\n          throw Error(`Node '${self}' has no '${tag}' edge for '${target}'`)\n        }\n      },\n    }))\n    .views(self => ({\n      getEdgeTag(tag: string): void | Array<Instance<IAnyModelType>> {\n        return self.edgeMap.get(tag)\n      },\n    }))\n\nexport const nodeFactory = (\n  models: IAnyModelType | Array<IAnyModelType> = [],\n): IAnyModelType =>\n  types\n    .compose(\n      // @ts-ignore\n      ...[\n        types.model({\n          id: types.identifier,\n        }),\n      ].concat(models),\n    )\n    .named('Node')\n\ninterface GraphFactoryOptions {\n  getId?: () => string\n}\n\nexport const graphFactory = (\n  nodeModels: ModelTable,\n  options: GraphFactoryOptions = {},\n): IAnyModelType =>\n  types\n    .model(\n      'Graph',\n      Object.fromEntries(\n        Object.keys(nodeModels).map(key => {\n          const model = nodeModels[key]\n\n          if (isModelType(model) && isIdentifierType(model.properties.id)) {\n            return [key, types.map(nodeModels[key])]\n          }\n\n          // Can't add an identifier because the model may be referenced\n          throw Error(`Model '${key}' requires 'id' identifier`)\n        }),\n      ),\n    )\n    .actions(self => ({\n      createNode(\n        modelName = 'Node',\n        props: SnapshotIn<IAnyModelType> = {},\n      ): Instance<IAnyModelType> {\n        if (!nodeModels[modelName]) {\n          throw Error(`No model named '${modelName}'`)\n        }\n\n        const node = nodeModels[modelName].create({\n          id: options.getId?.() ?? uuid(),\n          ...props,\n        })\n\n        self[modelName].put(node)\n\n        return node\n      },\n    }))\n\nexport const NodeBase = nodeFactory(edgeMapFactory(() => NodeBase))\nexport const GraphBase = graphFactory({ Node: NodeBase })\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types } from 'mobx-state-tree'\n\nexport const Note = types\n  .model('Note', {\n    body: types.string,\n  })\n  .actions(self => ({\n    setBody(content: string) {\n      self.body = content\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport {\n  Box,\n  Button,\n  IconButton,\n  Toolbar,\n  Theme,\n  makeStyles,\n  createStyles,\n} from '@material-ui/core'\nimport Code from '@material-ui/icons/Code'\nimport FormatQuote from '@material-ui/icons/FormatQuote'\nimport FormatBold from '@material-ui/icons/FormatBold'\nimport FormatItalic from '@material-ui/icons/FormatItalic'\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined'\nimport SpaceBar from '@material-ui/icons/SpaceBar'\nimport FormatListNumbered from '@material-ui/icons/FormatListNumbered'\nimport FormatListBulleted from '@material-ui/icons/FormatListBulleted'\nimport * as Draft from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nimport { Note } from './Note'\n\ninterface ButtonConfig {\n  label: string\n  style: string\n  icon?: React.ReactElement\n}\n\nconst BLOCK_TYPES: Array<ButtonConfig> = [\n  /* { label: 'H1', style: 'header-one' }, */\n  /* { label: 'H2', style: 'header-two' }, */\n  /* { label: 'H3', style: 'header-three' }, */\n  /* { label: 'H4', style: 'header-four' }, */\n  /* { label: 'H5', style: 'header-five' }, */\n  /* { label: 'H6', style: 'header-six' }, */\n  { label: 'UL', style: 'unordered-list-item', icon: <FormatListNumbered /> },\n  { label: 'OL', style: 'ordered-list-item', icon: <FormatListBulleted /> },\n  { label: 'Blockquote', style: 'blockquote', icon: <FormatQuote /> },\n  { label: 'Code Block', style: 'code-block', icon: <Code /> },\n]\n\nconst INLINE_STYLES: Array<ButtonConfig> = [\n  { label: 'Bold', style: 'BOLD', icon: <FormatBold /> },\n  { label: 'Italic', style: 'ITALIC', icon: <FormatItalic /> },\n  { label: 'Underline', style: 'UNDERLINE', icon: <FormatUnderlined /> },\n  { label: 'Monospace', style: 'CODE', icon: <SpaceBar /> },\n]\n\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n}\n\nfunction getBlockStyle(block: Draft.ContentBlock): string {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    default:\n      return ''\n  }\n}\n\ninterface StyleButtonProps {\n  onToggle: (inlineStyle: string) => void\n  style: string\n  active: boolean\n  label: string\n  icon?: React.ReactElement\n}\n\nconst StyleButton: React.FunctionComponent<StyleButtonProps> = ({\n  onToggle,\n  style,\n  active,\n  label,\n  icon,\n}) => {\n  const onToggleWrap: React.EventHandler<React.SyntheticEvent> = e => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  let className = 'RichEditor-styleButton'\n  if (active) {\n    className += ' RichEditor-activeButton'\n  }\n\n  return icon ? (\n    <IconButton size=\"small\" onMouseDown={onToggleWrap} className={className}>\n      {icon}\n    </IconButton>\n  ) : (\n    <Button\n      size=\"small\"\n      startIcon={icon ? icon : undefined}\n      onMouseDown={onToggleWrap}\n      className={className}\n    >\n      {icon ? '' : label}\n    </Button>\n  )\n}\n\ninterface BlockStyleControlsProps {\n  editorState: Draft.EditorState\n  onToggle: (style: string) => void\n}\n\nconst BlockStyleControls: React.FunctionComponent<BlockStyleControlsProps> = ({\n  editorState,\n  onToggle,\n}) => {\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          icon={type.icon}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\n\ninterface InlineStyleControlsProps {\n  editorState: Draft.EditorState\n  onToggle: (style: string) => void\n}\n\nconst InlineStyleControls: React.FunctionComponent<InlineStyleControlsProps> = ({\n  editorState,\n  onToggle,\n}) => {\n  const currentStyle = editorState.getCurrentInlineStyle()\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map(type => (\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          icon={type.icon}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    input: {\n      height: '300px',\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    toolbar: {\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n  }),\n)\n\ninterface NoteEditorProps {\n  note?: Instance<typeof Note>\n  className?: string\n}\n\nexport const NoteEditor: React.FunctionComponent<NoteEditorProps> = ({\n  note,\n  className,\n}) => {\n  const classes = useStyles()\n  const editorRef = React.useRef(null)\n  const [editorState, setEditorState] = React.useState(\n    Draft.EditorState.createWithContent(Draft.ContentState.createFromText('')),\n  )\n\n  function handleKeyCommand(\n    command: Draft.DraftEditorCommand,\n    editorState: Draft.EditorState,\n  ): Draft.DraftHandleValue {\n    const newState = Draft.RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      setEditorState(newState)\n      return 'handled'\n    } else {\n      return 'not-handled'\n    }\n  }\n\n  const mapKeyToEditorCommand = (\n    e: React.KeyboardEvent,\n  ): Draft.DraftEditorCommand | null => {\n    if (e.keyCode === 9) {\n      e.preventDefault()\n\n      const newEditorState = Draft.RichUtils.onTab(e, editorState, 4)\n\n      if (newEditorState !== editorState) {\n        setEditorState(newEditorState)\n      }\n\n      return null\n    } else {\n      return Draft.getDefaultKeyBinding(e)\n    }\n  }\n\n  function toggleBlockType(blockType: string): void {\n    setEditorState(Draft.RichUtils.toggleBlockType(editorState, blockType))\n  }\n\n  function toggleInlineStyle(inlineStyle: string): void {\n    setEditorState(Draft.RichUtils.toggleInlineStyle(editorState, inlineStyle))\n  }\n\n  return (\n    <div className={classes.root}>\n      <Toolbar variant=\"dense\" className={classes.toolbar}>\n        <Box flexGrow={1}>\n          <InlineStyleControls\n            editorState={editorState}\n            onToggle={toggleInlineStyle}\n          />\n        </Box>\n        <BlockStyleControls\n          editorState={editorState}\n          onToggle={toggleBlockType}\n        />\n      </Toolbar>\n      <div className={classes.input}>\n        <Draft.Editor\n          ref={editorRef}\n          blockStyleFn={getBlockStyle}\n          customStyleMap={styleMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={setEditorState}\n          placeholder=\"Write here\"\n          spellCheck={true}\n        />\n      </div>\n    </div>\n  )\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types, IAnyType } from 'mobx-state-tree'\n\nimport { Config as BaseConfig } from 'config'\nimport { Note as BaseNote } from 'note'\n\nimport { nodeFactory, edgeMapFactory } from 'graph'\n\nexport const Config = nodeFactory(BaseConfig)\nexport const Note = nodeFactory(BaseNote)\n\nexport const Node = nodeFactory([\n  edgeMapFactory(() =>\n    types.union(\n      types.late((): IAnyType => Node),\n      Config,\n      Note,\n    ),\n  ),\n])\n  .props({\n    label: types.optional(types.string, ''),\n  })\n\n  .actions(self => ({\n    setLabel(label: string) {\n      self.label = label\n    },\n  }))\n\n  .views(self => ({\n    get childCount(): number {\n      return self.edgeMap.get('child')?.length ?? 0\n    },\n\n    get createDate(): Date {\n      return self.events[0]?.date\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { Instance, SnapshotIn, IAnyModelType } from 'mobx-state-tree'\n\nimport { persist } from 'store/persist'\n\nimport { graphFactory } from './factories'\nimport { Node, Config, Note } from './Node'\n\nexport const Graph = graphFactory({ Node, Config, Note })\n  // Modes\n  .actions(self => ({\n    setActiveMode(mode: string) {\n      const activeModes = self.Config.get('system').get('activeModes')\n      if (activeModes && !activeModes?.includes(mode)) {\n        activeModes.push(mode)\n      }\n    },\n\n    unsetActiveMode(mode: string) {\n      const activeModes = self.Config.get('system').get('activeModes')\n      if (activeModes?.includes(mode)) {\n        activeModes.remove(mode)\n      }\n    },\n\n    toggleActiveMode(mode: string) {\n      const activeModes = self.Config.get('system').get('activeModes')\n\n      if (!activeModes) {\n        return\n      }\n\n      if (activeModes.includes(mode)) {\n        activeModes.remove(mode)\n\n        // TODO mode logic doesn't belong here\n        if (mode === 'select') {\n          self.clearSelectedNodes()\n        }\n      } else {\n        activeModes.push(mode)\n      }\n    },\n  }))\n\n  // Selection\n  .actions(self => ({\n    clearSelectedNodes() {\n      self.Config.get('system').get('selectedNodes')?.clear()\n    },\n\n    deleteSelectedNodes() {\n      const selectedNodes = self.Config.get('system')?.get('selectedNodes')\n      selectedNodes.forEach((id: string) => self.Node.delete(id))\n      self.clearSelectedNodes()\n      if (self.selectedNodes.length === 0) {\n        self.unsetActiveMode('select')\n      }\n    },\n\n    toggleSelectNode(node: Instance<typeof Node>) {\n      const selectedNodes = self.Config.get('system').get('selectedNodes')\n      if (selectedNodes?.includes(node.id)) {\n        selectedNodes?.remove(node.id)\n      } else {\n        selectedNodes?.push(node.id)\n      }\n\n      if (selectedNodes.length === 0) {\n        self.toggleActiveMode('select')\n      }\n    },\n\n    // selectNode(node: Instance<typeof Node>) {\n\n    // },\n\n    // deselectNode(node: Instance<typeof Node>) {\n\n    // },\n\n    selectAllChildNodes(node: Instance<typeof Node>) {\n      node.edgeMap\n        .get('child')\n        .forEach((child: Instance<typeof Node>) => console.log('child'))\n    },\n\n    // deselectAllChildNodes(node: Instance<typeof Node>) {\n\n    // },\n  }))\n\n  .actions(self => ({\n    afterCreate() {\n      persist(self).then(() => {\n        if (!self.Config.has('system')) {\n          const root = self.createNode('Node', { label: 'Exuo' })\n          self.createNode('Config', {\n            id: 'system',\n            items: {\n              rootNodeId: root.id,\n              activeModes: [],\n              selectedNodes: [],\n            },\n          })\n          self.createNode('Config', {\n            id: 'user',\n            items: {\n              global: {\n                dividers: false,\n              },\n              lists: {\n                checkbox: false,\n                dividers: false,\n                showChildCount: true,\n                showEdgeChips: false,\n              },\n            },\n          })\n        }\n      })\n    },\n\n    createChild<T extends IAnyModelType>(\n      node: Instance<typeof Node>,\n      edgeProps: SnapshotIn<T>,\n      edgeType = 'Node',\n    ): Instance<typeof Node> {\n      const child = self.createNode(edgeType, edgeProps)\n\n      node.addEdge('child', child)\n      child.addEdge('parent', node)\n\n      return child\n    },\n\n    deleteNode(node: Instance<typeof Node>) {\n      self.Node.delete(node.id)\n    },\n\n    toggleGlobalDividerSetting() {\n      const value = self.Config.get('user').get('global')?.get('dividers')\n      self.Config.get('user').get('global')?.set('dividers', !value)\n    },\n\n    toggleListCheckboxSetting() {\n      const value = self.Config.get('user').get('lists')?.get('checkbox')\n      self.Config.get('user').get('lists')?.set('checkbox', !value)\n    },\n  }))\n  .views(self => ({\n    get rootNode() {\n      const config = self.Config.get('system')\n      return config && self.Node.get(config.get('rootNodeId'))\n    },\n\n    get activeModes() {\n      const config = self.Config.get('system')\n      return config?.get('activeModes')\n    },\n\n    get selectedNodes() {\n      return self.Config.get('system')?.get('selectedNodes')\n    },\n\n    get listCheckboxSetting() {\n      return self.Config.get('user')?.get('lists')?.get('checkbox')\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { List } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { IAnyModelType, Instance } from 'mobx-state-tree'\n\nimport { Node, useGraph, NodeListItem } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {},\n  }),\n)\n\ninterface EdgeListProps {\n  node: Instance<IAnyModelType>\n  edgeTag: string\n  className?: string\n}\n\nexport const EdgeList: React.FunctionComponent<EdgeListProps> = ({\n  node,\n  edgeTag,\n  className,\n}) => {\n  const classes = useStyles()\n  return useGraph(graph => (\n    <List aria-label=\"edge list\" className={classes.list}>\n      {node.edgeMap\n        .get(edgeTag)\n        ?.slice()\n        .reverse()\n        .map((item: Instance<typeof Node>) => (\n          <NodeListItem node={item} key={`${edgeTag}-${item.id}`} />\n        ))}\n    </List>\n  ))\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { InputBase } from '@material-ui/core'\nimport 'draft-js/dist/Draft.css'\n\nimport { useGraph, Node } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      fontSize: 0,\n      padding: 0,\n    },\n\n    inputBase: {\n      '& input': {\n        lineHeight: 'unset',\n\n        // Extra pixel to account for body1 being 18px tall and\n        // this typography being 19px tall for some reason.\n        padding: '3px 0 2px 0',\n      },\n    },\n  }),\n)\n\ninterface LabelEditorProps {\n  label?: string\n  createMode?: boolean\n  placeholder?: string\n  className?: string\n  onValue?: (value: string) => void | string\n}\n\nexport const LabelEditor: React.FunctionComponent<LabelEditorProps> = ({\n  label,\n  createMode,\n  placeholder,\n  className,\n  onValue,\n}) => {\n  const classes = useStyles()\n  const [inputValue, setInputValue] = React.useState(label ?? '')\n\n  return useGraph(graph => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n      setInputValue(event.target.value)\n    }\n\n    const handleValue = (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      const value = onValue?.(inputValue)\n      if (value !== undefined) {\n        setInputValue(value)\n      }\n    }\n\n    return (\n      <form\n        onSubmit={handleValue}\n        onBlur={handleValue}\n        className={[classes.root, className].join(' ')}\n      >\n        <InputBase\n          autoFocus\n          placeholder={placeholder}\n          inputProps={{ 'aria-label': 'label' }}\n          onChange={handleChange}\n          value={inputValue}\n          className={classes.inputBase}\n          fullWidth\n        />\n      </form>\n    )\n  })\n}\n\nLabelEditor.defaultProps = {\n  createMode: false,\n  placeholder: 'Label',\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { Button, Typography } from '@material-ui/core'\nimport Delete from '@material-ui/icons/Delete'\nimport Edit from '@material-ui/icons/Edit'\nimport Folder from '@material-ui/icons/Folder'\nimport FileCopy from '@material-ui/icons/FileCopy'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { Node, useGraph } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    button: {\n      color: theme.palette.action.active,\n    },\n    deleteButton: {\n      color: theme.palette.error.main,\n    },\n  }),\n)\n\nexport const SelectionActions: React.FunctionComponent = () => {\n  const classes = useStyles()\n  return useGraph(graph => (\n    <div className={classes.root}>\n      {/*\n      <Button startIcon={<Edit />} disabled className={classes.button}>\n        Modify\n      </Button>\n\n      <Button startIcon={<FileCopy />} disabled className={classes.button}>\n        Copy\n      </Button>\n\n      <Button startIcon={<Folder />} disabled className={classes.button}>\n        Move\n      </Button>\n      */}\n\n      <Button\n        startIcon={<Delete />}\n        disabled={graph.selectedNodes.length ? undefined : true}\n        className={[classes.button, classes.deleteButton].join(' ')}\n        onClick={() => graph.deleteSelectedNodes()}\n      >\n        Delete\n      </Button>\n    </div>\n  ))\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  Toolbar,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport EditIcon from '@material-ui/icons/Edit'\nimport GroupWorkIcon from '@material-ui/icons/GroupWork'\nimport { Instance } from 'mobx-state-tree'\n\nimport { isRootPath } from 'common'\nimport { SelectionActions } from 'select'\n\nimport { Node, useGraph, LabelEditor } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      justifyContent: 'center',\n    },\n    button: {},\n    labelEditor: {\n      width: '100%',\n    },\n  }),\n)\n\ninterface NodeActionsProps {\n  node: Instance<typeof Node>\n  className?: string\n}\n\ntype ActionMode = 'normal' | 'add' | 'edit' | 'share'\n\nexport const NodeActions: React.FunctionComponent<NodeActionsProps> = ({\n  node,\n  className,\n}) => {\n  const classes = useStyles()\n  const [mode, setMode] = React.useState<ActionMode>('normal')\n\n  return useGraph(graph => {\n    const hasChildren = node?.childCount > 0\n    return (\n      <Toolbar variant=\"dense\" className={[classes.root, className].join(' ')}>\n        {mode === 'normal' && !graph.activeModes.includes('select') && (\n          <>\n            <Button\n              startIcon={<AddIcon />}\n              onClick={() => setMode('add')}\n              className={classes.button}\n            >\n              new\n            </Button>\n\n            {hasChildren && (\n              <Button\n                startIcon={<EditIcon />}\n                onClick={() => graph.toggleActiveMode('edit')}\n                color={\n                  graph.activeModes.includes('edit') ? 'primary' : 'default'\n                }\n                className={classes.button}\n              >\n                edit\n              </Button>\n            )}\n\n            {isRootPath() || (\n              <Button\n                disabled\n                startIcon={<GroupWorkIcon />}\n                onClick={() => {\n                  if (graph.activeModes.includes('share')) {\n                    graph.closePeerConnection()\n                  } else {\n                    graph.offerPeerConnection(node)\n                  }\n                }}\n                color={\n                  graph.activeModes.includes('share') ? 'primary' : 'default'\n                }\n                className={classes.button}\n              >\n                share\n              </Button>\n            )}\n          </>\n        )}\n\n        {mode === 'normal' && graph.activeModes.includes('select') && (\n          <SelectionActions />\n        )}\n\n        {mode === 'add' && (\n          <LabelEditor\n            placeholder=\"Label\"\n            onValue={value => {\n              if (value) {\n                graph.createChild(node, { label: value })\n                return ''\n              } else {\n                setMode('normal')\n              }\n            }}\n            className={classes.labelEditor}\n          />\n        )}\n\n        {false && graph.activeModes.includes('select') && <div>edit</div>}\n\n        {false && graph.activeModes.includes('share') && <div>share</div>}\n      </Toolbar>\n    )\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { AppBar, Box } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { Instance } from 'mobx-state-tree'\n\nimport { TitleBar } from 'common'\n\nimport { Node, useGraph, NodeActions } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    actions: {\n      width: '100%',\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    children: {\n      marginTop: -theme.spacing(1),\n    },\n  }),\n)\n\ninterface LayoutProps {\n  node: Instance<typeof Node>\n  className?: string\n}\n\nexport const NodeLayout: React.FunctionComponent<LayoutProps> = ({\n  node,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  return useGraph(graph => (\n    <Box className={[classes.root, className].join(' ')}>\n      <AppBar elevation={0} position=\"sticky\">\n        <TitleBar title={node.label} />\n        <NodeActions node={node} className={classes.actions} />\n      </AppBar>\n      <Box className={classes.children}>{children}</Box>\n    </Box>\n  ))\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  Chip,\n  Checkbox,\n  Button,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core'\nimport AccountTreeIcon from '@material-ui/icons/AccountTree'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport 'draft-js/dist/Draft.css'\nimport { Instance } from 'mobx-state-tree'\nimport { Link, useNavigate } from '@reach/router'\n\nimport { makeUrl } from 'route'\nimport { useGraph, Node, LabelEditor } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    listItem: {\n      '&:hover': { color: theme.palette.primary.main },\n      '&.MuiListItem-button': {\n        backgroundColor: 'unset',\n      },\n      [theme.breakpoints.up('sm')]: {\n        borderRadius: theme.shape.borderRadius,\n      },\n    },\n    itemText: {\n      display: 'inline-block',\n      margin: 0,\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      ...theme.typography.body1,\n    },\n    listItemSelectCheckbox: {\n      padding: theme.spacing(0, 1, 0, 1),\n      '&:hover, &.Mui-checked:hover': {\n        backgroundColor: 'unset',\n      },\n    },\n    listItemIcon: {\n      minWidth: 'auto',\n    },\n    editItemText: {\n      display: 'inline-block',\n      margin: 0,\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      ...theme.typography.body1,\n    },\n    chip: {\n      pointerEvents: 'auto',\n      color: theme.palette.text.hint,\n      backgroundColor: 'transparent',\n      '&:hover': {\n        color: theme.palette.primary.main,\n        cursor: 'auto',\n      },\n      '& svg': {\n        pointerEvents: 'auto',\n        color: 'inherit',\n      },\n      '&:last-child .MuiChip-label': {\n        paddingRight: 0,\n      },\n    },\n    secondaryActions: {\n      right: 0,\n      color: theme.palette.text.secondary,\n    },\n    childButton: {\n      color: theme.palette.text.secondary,\n      '&:hover, &:focus': {\n        color: theme.palette.primary.main,\n        background: 'inherit',\n      },\n    },\n  }),\n)\n\ninterface NodeListItemProps {\n  node: Instance<typeof Node>\n}\n\nexport const NodeListItem: React.FunctionComponent<NodeListItemProps> = ({\n  node,\n  ...props\n}) => {\n  const classes = useStyles()\n  const navigate = useNavigate()\n  const [isEditing, setIsEditing] = React.useState(false)\n  const isMouseDown = React.useRef(false)\n  const timer = React.useRef<ReturnType<typeof setTimeout>>()\n\n  return useGraph(graph => {\n    const listConfig = graph.Config.get('user')?.get('lists')\n    const showChildCount = listConfig?.get('showChildCount')\n    const showEdgeChips = listConfig?.get('showEdgeChips')\n\n    const downHandler: React.EventHandler<React.SyntheticEvent> = e => {\n      isMouseDown.current = true\n      e.persist()\n\n      timer.current = setTimeout(() => {\n        e.preventDefault()\n\n        isMouseDown.current = false\n        if (timer.current) {\n          clearTimeout(timer.current)\n        }\n\n        graph.toggleActiveMode('select')\n        if (graph.activeModes.includes('select')) {\n          graph.toggleSelectNode(node)\n        }\n      }, 390)\n    }\n\n    const upHandler: React.EventHandler<React.SyntheticEvent> = e => {\n      if (!isMouseDown.current) {\n        return\n      }\n\n      if (graph.activeModes.includes('select')) {\n        graph.toggleSelectNode(node)\n      } else if (graph.activeModes.includes('edit')) {\n        setIsEditing(true)\n      } else {\n        navigate(makeUrl(`/node/${node.id}`))\n      }\n\n      isMouseDown.current = false\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n    }\n\n    const isSelected = graph.selectedNodes.includes(node.id)\n\n    return (\n      <ListItem\n        button\n        disableRipple\n        onMouseDown={downHandler}\n        onTouchStart={downHandler}\n        onMouseUp={upHandler}\n        onTouchEnd={upHandler}\n        component={'li'}\n        className={classes.listItem}\n      >\n        {graph.activeModes.includes('select') && (\n          <Checkbox\n            checked={isSelected}\n            tabIndex={-1}\n            color=\"primary\"\n            edge=\"start\"\n            className={classes.listItemSelectCheckbox}\n          />\n        )}\n        {isEditing ? (\n          <LabelEditor\n            label={node.label}\n            onValue={value => {\n              node.setLabel(value)\n              setIsEditing(false)\n            }}\n          />\n        ) : (\n          <ListItemText\n            primary={node.label}\n            primaryTypographyProps={{ display: 'inline' }}\n            className={classes.itemText}\n          />\n        )}\n        <ListItemSecondaryAction className={classes.secondaryActions}>\n          {showEdgeChips && (\n            <>\n              <Chip\n                label={node.childCount}\n                icon={<AccountTreeIcon />}\n                size=\"small\"\n                to={makeUrl(`/node/${node.id}/`)}\n                component={Link}\n                className={classes.chip}\n              />\n            </>\n          )}\n\n          {showChildCount && !showEdgeChips && node.childCount > 0 && (\n            <Button\n              endIcon={<ChevronRight />}\n              to={makeUrl(`/node/${node.id}/`)}\n              component={Link}\n              className={classes.childButton}\n            >\n              {node.childCount}\n            </Button>\n          )}\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\n\nimport { useStore } from 'store'\n\nimport { NodeLayout, EdgeList } from 'graph'\n\ninterface NodeViewerProps {\n  id?: string\n}\n\nexport const NodeViewer: React.FunctionComponent<NodeViewerProps> = ({ id }) =>\n  useStore(store => {\n    let instance = store.graph.rootNode\n    const node = store.graph.Node.get(id)\n\n    if (node) {\n      instance = node\n    }\n\n    return instance ? (\n      <NodeLayout node={instance}>\n        <EdgeList node={instance} edgeTag=\"child\" />\n      </NodeLayout>\n    ) : null\n  })\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport * from './PeerConnector'\nexport * from './PeerManager'\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport * as reach from '@reach/router'\n\nimport { useGraph } from 'graph'\nimport { NodeViewer } from 'graph'\nimport { PeerConnector } from 'peer'\nimport { Settings } from 'config'\n\n// Necessary for now because this routing library is bad.\nexport function makeUrl(path: string = ''): string {\n  return process.env.PUBLIC_URL + path\n}\n\nexport type RouteProps<T = unknown> = {\n  component: React.FunctionComponent<T>\n} & reach.RouteComponentProps\n\nexport const Route: React.FunctionComponent<RouteProps> = ({\n  component: Component,\n  ...props\n}) => <Component {...props} />\n\nexport const Router: React.FunctionComponent = () =>\n  useGraph(graph =>\n    graph.rootNode ? (\n      <reach.Router basepath={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={NodeViewer} />\n        <Route path=\":type/:id\" component={NodeViewer} />\n        <Route path=\"peer/:id\" component={PeerConnector} />\n        <Route path=\"settings\" component={Settings} />\n      </reach.Router>\n    ) : null,\n  )\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { AppBar, Box } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { TitleBar } from 'common'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    appBar: {},\n    actions: {\n      width: '100%',\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    children: {},\n  }),\n)\n\ninterface LayoutProps {\n  title?: string\n  actions?: React.ReactElement\n  className?: string\n}\n\nexport const Layout: React.FunctionComponent<LayoutProps> = ({\n  title,\n  actions,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  return (\n    <Box className={[classes.root, className].join(' ')}>\n      <AppBar elevation={0} position=\"sticky\" className={classes.appBar}>\n        <TitleBar title={title} />\n        {actions}\n      </AppBar>\n      <Box className={classes.children}>{children}</Box>\n    </Box>\n  )\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types, IAnyType } from 'mobx-state-tree'\n\nexport const Unknown = types.union(\n  types.null,\n  types.boolean,\n  types.string,\n  types.number,\n  types.array(types.late((): IAnyType => Unknown)),\n  types.map(types.late((): IAnyType => Unknown)),\n)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Typography, Toolbar, IconButton, Box } from '@material-ui/core'\nimport { ToggleButton } from '@material-ui/lab'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { Link } from '@reach/router'\n\nimport { makeUrl } from 'route'\nimport { isRootPath } from 'common'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(0, 2, 0, 2),\n    },\n    backButton: {\n      '&[disabled]': {\n        visibility: 'hidden',\n        pointerEvents: 'none',\n      },\n    },\n    hide: {\n      visibility: 'hidden',\n      mouseEvents: 'none',\n    },\n    settingsButton: {},\n    title: {\n      flexGrow: 1,\n      textAlign: 'center',\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      color: theme.palette.text.primary,\n    },\n  }),\n)\n\ninterface TitleBarProps {\n  title?: string\n  showBackButton?: boolean\n  showSettingsButton?: boolean\n  className?: string\n}\n\nexport const TitleBar: React.FunctionComponent<TitleBarProps> = ({\n  title,\n  showBackButton,\n  showSettingsButton,\n  className,\n  children,\n}) => {\n  const classes = useStyles()\n  return (\n    <Toolbar variant=\"dense\" className={[classes.root, className].join(' ')}>\n      <IconButton\n        disabled={isRootPath()}\n        edge=\"start\"\n        aria-label=\"back\"\n        onClick={() => window.history.back()}\n        className={[\n          classes.backButton,\n          showBackButton ? '' : classes.hide,\n        ].join(' ')}\n      >\n        <ChevronLeftIcon />\n      </IconButton>\n\n      {title && (\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}\n        </Typography>\n      )}\n\n      <IconButton\n        disabled\n        edge=\"end\"\n        component={Link}\n        to={makeUrl(`/settings`)}\n        aria-label=\"settings\"\n        className={[\n          classes.settingsButton,\n          showSettingsButton ? '' : classes.hide,\n        ].join(' ')}\n      >\n        {<SettingsIcon fontSize=\"small\" />}\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nTitleBar.defaultProps = {\n  title: 'Exuo',\n  showBackButton: true,\n  showSettingsButton: false,\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { makeUrl } from 'route'\n\nexport const isRootPath = (): boolean =>\n  window.location.pathname === makeUrl('/') ||\n  window.location.pathname === makeUrl()\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nexport const ThemeProvider: React.FunctionComponent = ({ children }) => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        typography: {\n          fontFamily: [\n            '-apple-system',\n            'system-ui',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n          ].join(', '),\n        },\n\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: { main: '#f94d94' },\n          background: {\n            default: prefersDarkMode ? '#000000' : '#ffffff',\n          },\n          text: {\n            primary: prefersDarkMode\n              ? 'rgba(255, 255, 255, .75)'\n              : 'rgba(0, 0, 0, .75)',\n          },\n        },\n\n        shape: {\n          borderRadius: 6,\n        },\n\n        props: {\n          /* MuiButtonBase: { */\n          /*   disableRipple: true, */\n          /* }, */\n          MuiButton: {\n            disableElevation: true,\n          },\n        },\n\n        overrides: {\n          MuiCssBaseline: {\n            '@global': {\n              html: {\n                userSelect: 'none',\n                overscrollBehavior: 'none',\n                '-webkit-touch-callout': 'none',\n                maxWidth: '600px',\n                margin: 'auto',\n                '&, & body': {\n                  height: '100%',\n                },\n              },\n              /* '#root': { */\n              /*   height: '100%', */\n              /*   backgroundImage: 'url(/background.jpg)', */\n              /*   backgroundSize: 'cover', */\n              /* }, */\n            },\n          },\n        },\n      }),\n    [prefersDarkMode],\n  )\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MuiThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable no-console */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'mobx-react-lite/batchingForReactDom'\n\nimport { StoreProvider } from './store'\nimport { ThemeProvider } from './theme'\nimport { Router } from './route'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <ThemeProvider>\n        <Router />\n      </ThemeProvider>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nserviceWorker.register()\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\n\nimport { Graph } from 'graph'\nimport { Route } from 'route'\n\nimport { Store } from './Store'\n\nconst store = Store.create({\n  graph: Graph.create(),\n})\n\nexport const storeContext = React.createContext<Instance<typeof Store>>(store)\n\nexport const StoreProvider: React.FunctionComponent = ({ children }) =>\n  React.createElement(storeContext.Provider, { value: store }, children)\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { List, ListItem, ListItemText } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { getMembers, Instance, isStateTreeNode } from 'mobx-state-tree'\n\nimport { useGraph, Node } from 'graph'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    item: {},\n    itemText: {},\n  }),\n)\n\ninterface PropertyEditorProps {\n  node?: Instance<typeof Node> | string\n  propName?: string\n  minimal?: boolean\n}\n\nexport const PropertyEditor: React.FunctionComponent<PropertyEditorProps> = props => {\n  const classes = useStyles()\n\n  return useGraph(graph => {\n    let node = props.node\n    if (typeof node === 'string') {\n      node = graph.Node.get(props.node)\n    }\n\n    if (!isStateTreeNode(node)) {\n      return <></> // Loading\n    }\n\n    const members = getMembers(node)\n    const properties = Object.keys(members.properties)\n\n    const handleSubmit: React.EventHandler<React.SyntheticEvent> = () => {\n      console.log('submit')\n    }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <List className={classes.root}>\n          {properties.map(value => (\n            <ListItem dense button key={value} className={classes.item}>\n              <ListItemText\n                primary={value}\n                id={`list-label-${value}`}\n                className={classes.itemText}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </form>\n    )\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types } from 'mobx-state-tree'\n\nimport { Graph } from 'graph'\n\nexport const Store = types\n  .model('Store', {\n    graph: Graph,\n    location: types.optional(types.string, '/'),\n  })\n  .actions(self => ({\n    setLocation(path: string) {\n      self.location = path\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { useObserver } from 'mobx-react-lite'\n\nimport { Store, storeContext } from 'store'\n\nexport function useStore<S>(selector: (s: Instance<typeof Store>) => S): S {\n  const store = React.useContext(storeContext)\n  if (store) {\n    return useObserver(() => selector(store))\n  } else {\n    throw Error('Cannot use store before setup')\n  }\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  Instance,\n  onPatch,\n  getSnapshot,\n  getMembers,\n  applySnapshot,\n  IAnyModelType,\n  isStateTreeNode,\n} from 'mobx-state-tree'\nimport Dexie from 'dexie'\n\nexport async function persist(\n  instance: Instance<IAnyModelType>,\n): Promise<void> {\n  const db = new Dexie('default')\n  const tableNames = Object.keys(getMembers(instance).properties)\n  const tableConfig = Object.fromEntries(tableNames.map(name => [name, 'id']))\n\n  db.version(1).stores(tableConfig)\n\n  return Promise.all(\n    tableNames.map(name =>\n      db\n        .table(name)\n        .toArray()\n        .then(rows => [name, Object.fromEntries(rows.map(r => [r.id, r]))]),\n    ),\n  ).then(resolved => {\n    applySnapshot(instance, Object.fromEntries(resolved))\n    onPatch(instance, patch => {\n      const [typeName, id, propName] = patch.path.split('/').slice(1)\n\n      if (patch.op === 'add') {\n        db.table(typeName).put(getSnapshot(instance[typeName].get(id)))\n      } else if (patch.op === 'replace' || patch.op === 'remove') {\n        let propValue = instance[typeName].get(id)[propName]\n\n        if (isStateTreeNode(propValue)) {\n          propValue = getSnapshot(propValue)\n        }\n\n        if (propName) {\n          db.table(typeName).update(id, {\n            [propName]: propValue,\n          })\n        } else {\n          db.table(typeName).delete(id)\n        }\n      } else {\n        throw Error(`Unknown patch op '${patch.op}'`)\n      }\n    })\n  })\n}\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { types as t, SnapshotIn, Instance } from 'mobx-state-tree'\n\nimport { Unknown } from 'common'\n\nexport const Config = t\n  .model('Config', {\n    name: t.maybe(t.string),\n    items: t.map(Unknown),\n  })\n  .actions(self => ({\n    set(key: string, value: SnapshotIn<typeof Unknown>) {\n      self.items.set(key, value)\n    },\n  }))\n  .views(self => ({\n    get(key: string): Instance<typeof Unknown> {\n      return self.items.get(key)\n    },\n  }))\n","/*\n * Copyright © 2020 Ty Dira <ty@dira.dev>\n\n * This file is part of Exuo.\n\n * Exuo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * Exuo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with Exuo.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Switch,\n} from '@material-ui/core'\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck'\nimport BorderAllIcon from '@material-ui/icons/BorderAll'\nimport AccountTreeIcon from '@material-ui/icons/AccountTree'\n\nimport { Layout } from 'common'\nimport { useGraph } from 'graph'\n\nexport const Settings: React.FunctionComponent = () => {\n  return useGraph(graph => (\n    <Layout>\n      <List subheader={<ListSubheader>Global</ListSubheader>}>\n        <ListItem>\n          <ListItemIcon>\n            <BorderAllIcon />\n          </ListItemIcon>\n          <ListItemText id=\"switch-list-label-dividers\" primary=\"Dividers\" />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-dividers',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n      <List subheader={<ListSubheader>Lists</ListSubheader>}>\n        <ListItem>\n          <ListItemIcon>\n            <PlaylistAddCheckIcon />\n          </ListItemIcon>\n          <ListItemText\n            id=\"switch-list-label-checkboxes\"\n            primary=\"Checkboxes\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              checked={graph.listCheckboxSetting ?? false}\n              onChange={() => graph.toggleListCheckboxSetting()}\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-checkboxes',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <BorderAllIcon />\n          </ListItemIcon>\n          <ListItemText id=\"switch-list-label-dividers\" primary=\"Dividers\" />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-list-dividers',\n              }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <AccountTreeIcon />\n          </ListItemIcon>\n          <ListItemText\n            id=\"switch-list-label-bluetooth\"\n            primary=\"Show Extra Edge Types\"\n          />\n          <ListItemSecondaryAction>\n            <Switch\n              disabled\n              edge=\"end\"\n              inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Layout>\n  ))\n}\n"],"sourceRoot":""}