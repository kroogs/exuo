// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders a list of associated nodes 1`] = `
<EdgeList
  node={
    Object {
      "edgeMap": Object {
        "child": Array [
          "3",
          "4",
          "5",
          "6",
          "7",
        ],
      },
      "id": "1",
    }
  }
>
  <WithStyles(ForwardRef(List))
    aria-label="edge list"
    disablePadding={true}
    subheader={<li />}
  >
    <ForwardRef(List)
      aria-label="edge list"
      classes={
        Object {
          "dense": "MuiList-dense",
          "padding": "MuiList-padding",
          "root": "MuiList-root",
          "subheader": "MuiList-subheader",
        }
      }
      disablePadding={true}
      subheader={<li />}
    >
      <ul
        aria-label="edge list"
        className="MuiList-root MuiList-subheader"
      >
        <li />
        <li
          className="makeStyles-listSection-1"
          key="edge-child"
        >
          <ul
            className="makeStyles-group-4"
          >
            <WithStyles(ForwardRef(ListItem))
              button={true}
              className="makeStyles-listItem-2"
              dense={true}
              disableGutters={true}
              key="edge-child-7"
              onClick={[Function]}
              onDoubleClick={[Function]}
            >
              <ForwardRef(ListItem)
                button={true}
                className="makeStyles-listItem-2"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
                dense={true}
                disableGutters={true}
                onClick={[Function]}
                onDoubleClick={[Function]}
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDoubleClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemText))
                        className="makeStyles-itemText-3"
                        key=".0"
                        primary="7"
                      >
                        <ForwardRef(ListItemText)
                          className="makeStyles-itemText-3"
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="7"
                        >
                          <div
                            className="MuiListItemText-root makeStyles-itemText-3 MuiListItemText-dense"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              display="block"
                              variant="body2"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                display="block"
                                variant="body2"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                >
                                  7
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              className="makeStyles-listItem-2"
              dense={true}
              disableGutters={true}
              key="edge-child-6"
              onClick={[Function]}
              onDoubleClick={[Function]}
            >
              <ForwardRef(ListItem)
                button={true}
                className="makeStyles-listItem-2"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
                dense={true}
                disableGutters={true}
                onClick={[Function]}
                onDoubleClick={[Function]}
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDoubleClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemText))
                        className="makeStyles-itemText-3"
                        key=".0"
                        primary="6"
                      >
                        <ForwardRef(ListItemText)
                          className="makeStyles-itemText-3"
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="6"
                        >
                          <div
                            className="MuiListItemText-root makeStyles-itemText-3 MuiListItemText-dense"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              display="block"
                              variant="body2"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                display="block"
                                variant="body2"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                >
                                  6
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              className="makeStyles-listItem-2"
              dense={true}
              disableGutters={true}
              key="edge-child-5"
              onClick={[Function]}
              onDoubleClick={[Function]}
            >
              <ForwardRef(ListItem)
                button={true}
                className="makeStyles-listItem-2"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
                dense={true}
                disableGutters={true}
                onClick={[Function]}
                onDoubleClick={[Function]}
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDoubleClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemText))
                        className="makeStyles-itemText-3"
                        key=".0"
                        primary="5"
                      >
                        <ForwardRef(ListItemText)
                          className="makeStyles-itemText-3"
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="5"
                        >
                          <div
                            className="MuiListItemText-root makeStyles-itemText-3 MuiListItemText-dense"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              display="block"
                              variant="body2"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                display="block"
                                variant="body2"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                >
                                  5
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              className="makeStyles-listItem-2"
              dense={true}
              disableGutters={true}
              key="edge-child-4"
              onClick={[Function]}
              onDoubleClick={[Function]}
            >
              <ForwardRef(ListItem)
                button={true}
                className="makeStyles-listItem-2"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
                dense={true}
                disableGutters={true}
                onClick={[Function]}
                onDoubleClick={[Function]}
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDoubleClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemText))
                        className="makeStyles-itemText-3"
                        key=".0"
                        primary="4"
                      >
                        <ForwardRef(ListItemText)
                          className="makeStyles-itemText-3"
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="4"
                        >
                          <div
                            className="MuiListItemText-root makeStyles-itemText-3 MuiListItemText-dense"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              display="block"
                              variant="body2"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                display="block"
                                variant="body2"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                >
                                  4
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
            <WithStyles(ForwardRef(ListItem))
              button={true}
              className="makeStyles-listItem-2"
              dense={true}
              disableGutters={true}
              key="edge-child-3"
              onClick={[Function]}
              onDoubleClick={[Function]}
            >
              <ForwardRef(ListItem)
                button={true}
                className="makeStyles-listItem-2"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
                dense={true}
                disableGutters={true}
                onClick={[Function]}
                onDoubleClick={[Function]}
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                >
                  <ForwardRef(ButtonBase)
                    className="MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                  >
                    <div
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiListItem-root makeStyles-listItem-2 MuiListItem-dense MuiListItem-button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDoubleClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <WithStyles(ForwardRef(ListItemText))
                        className="makeStyles-itemText-3"
                        key=".0"
                        primary="3"
                      >
                        <ForwardRef(ListItemText)
                          className="makeStyles-itemText-3"
                          classes={
                            Object {
                              "dense": "MuiListItemText-dense",
                              "inset": "MuiListItemText-inset",
                              "multiline": "MuiListItemText-multiline",
                              "primary": "MuiListItemText-primary",
                              "root": "MuiListItemText-root",
                              "secondary": "MuiListItemText-secondary",
                            }
                          }
                          primary="3"
                        >
                          <div
                            className="MuiListItemText-root makeStyles-itemText-3 MuiListItemText-dense"
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiListItemText-primary"
                              component="span"
                              display="block"
                              variant="body2"
                            >
                              <ForwardRef(Typography)
                                className="MuiListItemText-primary"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                                display="block"
                                variant="body2"
                              >
                                <span
                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body2 MuiTypography-displayBlock"
                                >
                                  3
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </ForwardRef(ListItemText)>
                      </WithStyles(ForwardRef(ListItemText))>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </div>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
          </ul>
        </li>
      </ul>
    </ForwardRef(List)>
  </WithStyles(ForwardRef(List))>
</EdgeList>
`;
